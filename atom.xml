<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[游骑爬，生命在于折腾]]></title>
  <subtitle><![CDATA[记录点滴]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://wiki.niejinkun.com/"/>
  <updated>2016-12-29T07:27:54.570Z</updated>
  <id>http://wiki.niejinkun.com/</id>
  
  <author>
    <name><![CDATA[niejinping]]></name>
    <email><![CDATA[297206021@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[我的工具经验(不定期更新)]]></title>
    <link href="http://wiki.niejinkun.com/2016/12/28/my-tools/"/>
    <id>http://wiki.niejinkun.com/2016/12/28/my-tools/</id>
    <published>2016-12-28T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<ul>
<li>在线修改表结构：pt-online-schema-change dba神器，在线扩充表结构</li>
<li>图床：微博图床，配合markdown,发文利器</li>
<li>全链路压测：tcpcopy</li>
<li>mysql慢查询可视化：box anemometer</li>
<li>gc log analyst online : 在线GC日志分析：<a href="http://gceasy.io/" target="_blank" rel="external">http://gceasy.io/</a></li>
<li><p>gc log demo : <a href="http://gceasy.io/my-gc-report.jsp?p=c2hhcmVkLzIwMTYvMTEvNC8tLWdjLmxvZy0tMTUtMTctNTE=" target="_blank" rel="external">http://gceasy.io/my-gc-report.jsp?p=c2hhcmVkLzIwMTYvMTEvNC8tLWdjLmxvZy0tMTUtMTctNTE=</a></p>
</li>
<li><p>jstack log analyst online : 在线thread日志分析 ：<a href="http://fastthread.io/" target="_blank" rel="external">http://fastthread.io/</a></p>
</li>
<li><p>jstack log demo: <a href="http://fastthread.io/ft-thread-report.jsp?dumpId=1&amp;oTxnId_value=8152f8f3-2e6a-4747-bb62-6e2ef99596e0" target="_blank" rel="external">http://fastthread.io/ft-thread-report.jsp?dumpId=1&amp;oTxnId_value=8152f8f3-2e6a-4747-bb62-6e2ef99596e0</a></p>
</li>
<li><p>goaccess nginx 日志分析：nginx日志分析神器</p>
</li>
<li><p>travic ci hexo github : 自动完成博客发布</p>
</li>
<li><p>搜索：elasticsearch</p>
</li>
<li>推荐：mahout</li>
<li>任务调度：spring job</li>
<li>消息: activemq</li>
<li>音频视频处理：ffmpeg</li>
<li>ORM框架：mybatis</li>
<li>服务化: dubbo</li>
<li>序列化：protobuffer,json,xml(不推荐)</li>
<li>推送：baidupush云推送</li>
<li>短信：创世华信，云片网络，互亿，创蓝</li>
<li>情感分析：微软机器学习开放api</li>
<li>大数据：hadoop,hbase</li>
<li>NOSQL : redis</li>
<li>缓存：ehcache,memcache,redis</li>
<li>SSO</li>
<li>认证框架</li>
<li>RESTFUL</li>
<li>API设计</li>
<li>数据库：路由，分库分表，binlog分析</li>
<li>tomcat:</li>
<li>java: maven,gradle</li>
<li>安全：跨域,shiro,spring security</li>
<li>存储： oss , aws se</li>
<li>语言： php yii2,go beego</li>
<li>图像处理：opencv,imagemaker,javacv</li>
<li>mqtt</li>
<li>yii2:做管理后台使用</li>
<li>go : 基于beego,开发线上api服务</li>
<li>jhipster: java一键代码生成框架，可以搭管理后台，微服务等</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>在线修改表结构：pt-online-schema-change dba神器，在线扩充表结构</li>
<li>图床：微博图床，配合markdown,发文利器</li>
<li>全链路压测：tcpcopy</li>
<li>mysql慢查询可视化：box anem]]>
    </summary>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[线上ngnix日志分析]]></title>
    <link href="http://wiki.niejinkun.com/2016/11/03/nginx%E2%95%9A%E2%95%92%E2%95%93%E2%95%9B%E2%95%96%E2%95%93%E2%95%AC%D0%8E/"/>
    <id>http://wiki.niejinkun.com/2016/11/03/nginx╚╒╓╛╖╓╬Ў/</id>
    <published>2016-11-03T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="u5B89_u88C5goaccess"><a href="#u5B89_u88C5goaccess" class="headerlink" title="安装goaccess"></a>安装goaccess</h2><p>goaccess是免费开源的nginx日志分析神器，他可以分析很多有用的数据。<br>goaccess，你值得拥有。</p>
<h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> goaccess</span><br></pre></td></tr></table></figure>
<p>关于goaccess的使用方法，建议前往goacces官网.</p>
<h2 id="u914D_u7F6Egoaccess-conf_u6587_u4EF6"><a href="#u914D_u7F6Egoaccess-conf_u6587_u4EF6" class="headerlink" title="配置goaccess.conf文件"></a>配置goaccess.conf文件</h2><p>必须配置下面三项</p>
<ul>
<li>log-format</li>
<li>date-format</li>
<li>time-format</li>
</ul>
<p>示例文件如下：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vi goaccess.conf</span><br><span class="line"><span class="keyword">log</span>-<span class="keyword">format</span> <span class="variable">%d</span>:<span class="variable">%t</span> <span class="variable">%^</span> <span class="variable">%h</span> <span class="variable">%s</span> <span class="variable">%T</span>  <span class="variable">%m</span> <span class="variable">%U</span> <span class="variable">%H</span> <span class="variable">%b</span></span><br><span class="line">time-<span class="keyword">format</span> <span class="variable">%H</span>:<span class="variable">%S</span>:<span class="variable">%M</span></span><br><span class="line"><span class="keyword">date</span>-<span class="keyword">format</span> <span class="variable">%d</span>/<span class="variable">%b</span>/<span class="variable">%Y</span></span><br></pre></td></tr></table></figure></p>
<p>注意，%T和%m之前有两个空格，这个很坑，goaccess对空格很敏感，一个都不能少</p>
<h2 id="u5751_u7684_u8BF4_u660E"><a href="#u5751_u7684_u8BF4_u660E" class="headerlink" title="坑的说明"></a>坑的说明</h2><p>goaccess对日志格式要求非常严格，自定义的格式，想通过语法检查还是很难的，建议只导出少量关键日志即可。<br>goaccess必须要有的日志有：</p>
<ul>
<li>时间</li>
<li>请求url</li>
<li>有效的IP地址</li>
</ul>
<p>即：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">a</span> valid IPv4/<span class="number">6</span> %h</span><br><span class="line"><span class="operator">a</span> valid <span class="built_in">date</span> %d</span><br><span class="line"><span class="operator">the</span> request %r</span><br></pre></td></tr></table></figure>
<p>一定要听劝。只导出少量数据，差一个空格，goaccess都会无法解析的。！！！！</p>
<h2 id="u8F6C_u6362nginx_u65E5_u5FD7_u683C_u5F0F"><a href="#u8F6C_u6362nginx_u65E5_u5FD7_u683C_u5F0F" class="headerlink" title="转换nginx日志格式"></a>转换nginx日志格式</h2><p>由于nginx日志有可能无法直接分析公司自定义的格式，因此，建议进行转换。<br>转换方法示例如下：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">"|"</span> '&#123;<span class="keyword">print</span> <span class="label">$2</span>,<span class="label">$3</span>,<span class="label">$5</span>,<span class="label">$6</span>,<span class="label">$12</span>,<span class="label">$14&#125;</span>' access_2016xxxx.<span class="keyword">log</span> &gt; new.<span class="literal">log</span></span><br></pre></td></tr></table></figure>
<h2 id="u5F00_u59CB_u5206_u6790"><a href="#u5F00_u59CB_u5206_u6790" class="headerlink" title="开始分析"></a>开始分析</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goaccess -f new<span class="class">.log</span> -<span class="tag">p</span> goaccess<span class="class">.conf</span> &gt; <span class="number">20161104</span>.html</span><br></pre></td></tr></table></figure>
<h2 id="u6765_u4E2A_u793A_u4F8B"><a href="#u6765_u4E2A_u793A_u4F8B" class="headerlink" title="来个示例"></a>来个示例</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">Total Requests  <span class="number">73049</span> Unique Visitors <span class="number">1855</span>  Referrers    <span class="number">0</span>   Log Size  <span class="number">7.18</span> MiB</span><br><span class="line">  Failed Requests <span class="number">7</span>     Unique Files    <span class="number">12286</span> Unique <span class="number">404</span>   <span class="number">199</span> Bandwidth <span class="number">269.59</span> MiB</span><br><span class="line">  Generation Time <span class="number">2</span>     Excl. IP Hits   <span class="number">0</span>     Static Files <span class="number">10</span>  Log File  new.log</span><br><span class="line"> &gt; <span class="number">1</span> - Unique visitors per day - Including spiders                                                                                                               Total: <span class="number">2</span>/<span class="number">2</span></span><br><span class="line"> Hits  Vis.      %   Bandwidth Avg. T.S. Cum. T.S. Max. T.S. Data</span><br><span class="line"> ----- ---- ------ ----------- --------- --------- --------- ----</span><br><span class="line"> <span class="number">13</span>       <span class="number">3</span>  <span class="number">0.02</span>%   <span class="number">12.20</span> KiB <span class="number">110.61</span> <span class="keyword">ms</span>   <span class="title">1</span>.<span class="number">44</span>  s <span class="number">387.00</span> <span class="keyword">ms</span> <span class="title">14</span>/Sep/<span class="number">2016</span> |</span><br><span class="line"> <span class="number">73029</span> <span class="number">1852</span> <span class="number">99.97</span>%  <span class="number">269.58</span> MiB   <span class="number">5.67</span>  s   <span class="number">4.79</span>  d   <span class="number">4.55</span> mn <span class="number">13</span>/Sep/<span class="number">2016</span> ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</span><br><span class="line"></span><br><span class="line">   <span class="number">2</span> - Top requests (URLs)                                                                                                                                 Total: <span class="number">366</span>/<span class="number">12286</span></span><br><span class="line"> Hits Vis.      %   Bandwidth Avg. T.S. Cum. T.S. Max. T.S. Data</span><br><span class="line"> ---- ---- ------ ----------- --------- --------- --------- ----</span><br><span class="line"> <span class="number">8008</span>  <span class="number">822</span> <span class="number">10.96</span>%   <span class="number">45.19</span> MiB  <span class="number">12.70</span>  s   <span class="number">1.18</span>  d   <span class="number">4.50</span> mn /</span><br><span class="line"> <span class="number">2708</span>  <span class="number">414</span>  <span class="number">3.71</span>%    <span class="number">8.48</span> MiB   <span class="number">4.40</span>  s   <span class="number">3.31</span> hr   <span class="number">3.12</span> mn /login/index</span><br><span class="line"> <span class="number">2483</span>  <span class="number">508</span>  <span class="number">3.40</span>%    <span class="number">5.56</span> KiB   <span class="number">1.07</span>  s  <span class="number">44.46</span> mn   <span class="number">1.41</span> mn /login</span><br><span class="line"></span><br><span class="line">   <span class="number">3</span> - Top static requests (e.g. jpg, png, js, css..)                                                                                                          Total: <span class="number">10</span>/<span class="number">10</span></span><br><span class="line"> Hits Vis.     %   Bandwidth Avg. T.S. Cum. T.S. Max. T.S. Data</span><br><span class="line"> ---- ---- ----- ----------- --------- --------- --------- ----</span><br><span class="line"> <span class="number">22</span>     <span class="number">13</span> <span class="number">0.03</span>%    <span class="number">4.41</span> KiB <span class="number">388.50</span> <span class="keyword">ms</span>   <span class="title">8</span>.<span class="number">55</span>  s   <span class="number">5.00</span>  s /robots.txt</span><br><span class="line"> <span class="number">9</span>       <span class="number">9</span> <span class="number">0.01</span>%    <span class="number">1.56</span> KiB   <span class="number">0.00</span> us   <span class="number">0.00</span> us   <span class="number">0.00</span> us /favicon.ico</span><br><span class="line"> <span class="number">6</span>       <span class="number">5</span> <span class="number">0.01</span>%   <span class="number">924.0</span>   B   <span class="number">0.00</span> us   <span class="number">0.00</span> us   <span class="number">0.00</span> us /apple-touch-icon-precomposed.png</span><br><span class="line"> <span class="number">6</span>       <span class="number">5</span> <span class="number">0.01</span>%   <span class="number">924.0</span>   B   <span class="number">0.00</span> us   <span class="number">0.00</span> us   <span class="number">0.00</span> us /apple-touch-icon.png</span><br><span class="line"> <span class="number">4</span>       <span class="number">4</span> <span class="number">0.01</span>%   <span class="number">86.51</span> KiB   <span class="number">2.00</span> <span class="keyword">ms</span>   <span class="title">8</span>.<span class="number">00</span> <span class="keyword">ms</span>   <span class="title">2</span>.<span class="number">00</span> <span class="keyword">ms</span> <span class="title">/r</span>/images/jhcf_image/logo2.png</span><br><span class="line"> <span class="number">1</span>       <span class="number">1</span> <span class="number">0.00</span>%   <span class="number">178.0</span>   B   <span class="number">0.00</span> us   <span class="number">0.00</span> us   <span class="number">0.00</span> us /sql.txt</span><br><span class="line"> <span class="number">1</span>       <span class="number">1</span> <span class="number">0.00</span>%   <span class="number">11.94</span> KiB   <span class="number">4.00</span> <span class="keyword">ms</span>   <span class="title">4</span>.<span class="number">00</span> <span class="keyword">ms</span>   <span class="title">4</span>.<span class="number">00</span> <span class="keyword">ms</span> <span class="title">/r</span>/css/common.css</span><br><span class="line">   <span class="number">4</span> - HTTP <span class="number">404</span> Not Found URLs                                                                                                                               Total: <span class="number">199</span>/<span class="number">199</span></span><br><span class="line"> Hits Vis.     %   Bandwidth Avg. T.S. Cum. T.S. Max. T.S. Data</span><br><span class="line"> ---- ---- ----- ----------- --------- --------- --------- ----</span><br><span class="line"> <span class="number">17</span>      <span class="number">0</span> <span class="number">0.02</span>%  <span class="number">122.59</span> KiB  <span class="number">10.29</span> <span class="keyword">ms</span> <span class="title">175</span>.<span class="number">00</span> <span class="keyword">ms</span>  <span class="title">21</span>.<span class="number">00</span> <span class="keyword">ms</span> <span class="title">/robots</span>.txt</span><br><span class="line"> <span class="number">11</span>      <span class="number">0</span> <span class="number">0.02</span>%   <span class="number">94.39</span> KiB   <span class="number">9.18</span> <span class="keyword">ms</span> <span class="title">101</span>.<span class="number">00</span> <span class="keyword">ms</span>  <span class="title">17</span>.<span class="number">00</span> <span class="keyword">ms</span> <span class="title">/wp-login</span>.php</span><br><span class="line"> <span class="number">5</span>       <span class="number">0</span> <span class="number">0.01</span>%   <span class="number">25.36</span> KiB <span class="number">631.60</span> <span class="keyword">ms</span>   <span class="title">3</span>.<span class="number">16</span>  s   <span class="number">2.61</span>  s /forum.php</span><br><span class="line"> <span class="number">5</span>       <span class="number">0</span> <span class="number">0.01</span>%   <span class="number">25.36</span> KiB <span class="number">265.40</span> <span class="keyword">ms</span>   <span class="title">1</span>.<span class="number">33</span>  s <span class="number">651.00</span> <span class="keyword">ms</span> <span class="title">/index</span>.php</span><br><span class="line"> <span class="number">4</span>       <span class="number">0</span> <span class="number">0.01</span>%   <span class="number">10.97</span> KiB   <span class="number">9.25</span> <span class="keyword">ms</span>  <span class="title">37</span>.<span class="number">00</span> <span class="keyword">ms</span>  <span class="title">11</span>.<span class="number">00</span> <span class="keyword">ms</span> <span class="title">/&lt;特征词ID</span>&gt;</span><br><span class="line"> <span class="number">3</span>       <span class="number">0</span> <span class="number">0.00</span>%    <span class="number">8.24</span> KiB   <span class="number">9.33</span> <span class="keyword">ms</span>  <span class="title">28</span>.<span class="number">00</span> <span class="keyword">ms</span>  <span class="title">11</span>.<span class="number">00</span> <span class="keyword">ms</span> <span class="title">/fin</span>/cjhb/buy//</span><br><span class="line">   <span class="number">5</span> - Visitor hostnames <span class="operator">and</span> IPs                                                                                                                            Total: <span class="number">366</span>/<span class="number">1861</span></span><br><span class="line"> Hits Vis.     %   Bandwidth Avg. T.S. Cum. T.S. Max. T.S. Data</span><br><span class="line"> ---- ---- ----- ----------- --------- --------- --------- ----</span><br><span class="line"> <span class="number">6221</span>    <span class="number">1</span> <span class="number">8.52</span>%   <span class="number">18.34</span> MiB  <span class="number">15.27</span>  s   <span class="number">1.10</span>  d   <span class="number">4.55</span> mn <span class="number">58.16</span>.<span class="number">112.90</span>    ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</span><br><span class="line"> <span class="number">4614</span>    <span class="number">1</span> <span class="number">6.32</span>%   <span class="number">13.62</span> MiB   <span class="number">6.03</span>  s   <span class="number">7.72</span> hr   <span class="number">4.55</span> mn <span class="number">111.85</span>.<span class="number">122.1</span>    ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</span><br><span class="line"> <span class="number">3848</span>    <span class="number">1</span> <span class="number">5.27</span>%   <span class="number">11.01</span> MiB   <span class="number">8.10</span>  s   <span class="number">8.65</span> hr   <span class="number">4.52</span> mn <span class="number">58.16</span>.<span class="number">21.22</span>     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</span><br><span class="line"> <span class="number">2386</span>    <span class="number">1</span> <span class="number">3.27</span>%  <span class="number">139.25</span> KiB  <span class="number">27.86</span> <span class="keyword">ms</span>   <span class="title">1</span>.<span class="number">11</span> mn   <span class="number">4.37</span>  s <span class="number">61.135</span>.<span class="number">189.122</span>  |||||||||||||||||||||||||||||||||||||</span><br><span class="line"> <span class="number">2110</span>    <span class="number">1</span> <span class="number">2.89</span>%    <span class="number">6.02</span> MiB   <span class="number">7.04</span>  s   <span class="number">4.13</span> hr   <span class="number">4.50</span> mn <span class="number">111.85</span>.<span class="number">122.222</span>  |||||||||||||||||||||||||||||||||</span><br><span class="line"> <span class="number">2084</span>    <span class="number">1</span> <span class="number">2.85</span>%    <span class="number">5.89</span> MiB   <span class="number">9.07</span>  s   <span class="number">5.25</span> hr   <span class="number">4.50</span> mn <span class="number">58.16</span>.<span class="number">24.42</span>     ||||||||||||||||||||||||||||||||</span><br><span class="line"> <span class="number">1380</span>    <span class="number">1</span> <span class="number">1.89</span>%    <span class="number">2.98</span> MiB  <span class="number">17.94</span>  s   <span class="number">6.88</span> hr   <span class="number">4.55</span> mn <span class="number">220.197</span>.<span class="number">207.138</span> |||||||||||||||||||||</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u5B89_u88C5goaccess"><a href="#u5B89_u88C5goaccess" class="headerlink" title="安装goaccess"></a>安装goaccess</h2><p>goaccess是免费开源的nginx日]]>
    </summary>
    
      <category term="nginx" scheme="http://wiki.niejinkun.com/tags/nginx/"/>
    
      <category term="nginx" scheme="http://wiki.niejinkun.com/categories/nginx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[性能优化之O2O大法]]></title>
    <link href="http://wiki.niejinkun.com/2016/10/27/%E2%95%A8%E2%95%98%E2%94%80%E2%96%84%E2%95%99%E2%94%BC%E2%95%97%D0%BF%E2%95%93%D0%BEO2O/"/>
    <id>http://wiki.niejinkun.com/2016/10/27/╨╘─▄╙┼╗п╓оO2O/</id>
    <published>2016-10-27T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="u4EC0_u4E48_u662F_u6027_u80FD_u4F18_u5316O2O"><a href="#u4EC0_u4E48_u662F_u6027_u80FD_u4F18_u5316O2O" class="headerlink" title="什么是性能优化O2O"></a>什么是性能优化O2O</h2><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    <span class="preprocessor">O2</span>O是互联网的热词，不过，在这里的<span class="preprocessor">O2</span>O是指架构设计的<span class="preprocessor">O2</span>O，即架构设计之线上到线下。</span><br><span class="line">通过将线上的业务逻辑，转到线下提前计划，将极大的提高线上的响应速度，吞吐量，以及用户体验。</span><br></pre></td></tr></table></figure>
<h2 id="u600E_u4E48_u8BB2"><a href="#u600E_u4E48_u8BB2" class="headerlink" title="怎么讲"></a>怎么讲</h2><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    公司业务刚启动时，业务量相对较小，也比较简单。通过简单地返回数据库当中的内部，即可汇总用户需求。</span><br><span class="line">当业务慢慢增加时，为了省事，可能数据库系统，变成了文件系统，数据库里面，存储的数据，不再是纯的结构化数据了，而是二级，三级结构化数据，字段不再是保持惟一性了。</span><br><span class="line">这样，中间的业务系统在拿到数据库的数据后，需要在<span class="built_in">CPU</span>和内存中进行搜索，过滤等业务处理。</span><br><span class="line">从而，导致大量无用的数据在网络上传递，占用大量的内存，然后<span class="built_in">CPU</span>中进行过滤，排重处理，导致系统对外整体性能慢，用户体验差。</span><br></pre></td></tr></table></figure>
<h2 id="u539F_u56E0"><a href="#u539F_u56E0" class="headerlink" title="原因"></a>原因</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户离数据远，中间环节太多</span><br></pre></td></tr></table></figure>
<h2 id="u600E_u4E48_u529E"><a href="#u600E_u4E48_u529E" class="headerlink" title="怎么办"></a>怎么办</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">让用户离数据更近</span><br></pre></td></tr></table></figure>
<h2 id="u600E_u4E48_u8FD1"><a href="#u600E_u4E48_u8FD1" class="headerlink" title="怎么近"></a>怎么近</h2><ul>
<li>线上业务转向线下。O2O.</li>
<li>将需要的线上数据提前生成，尽量减少数据在中间停留的时间。</li>
<li>线下提前生成线上需要的数据，通过时间窗口控制数据实时性</li>
<li>将阻塞同步式的RPC改为异步的MQ处理</li>
</ul>
<h2 id="u4F18_u70B9"><a href="#u4F18_u70B9" class="headerlink" title="优点"></a>优点</h2><ul>
<li>不怕出错，用户离他所需要的数据近，出问题的环节少，性能高</li>
<li>用户数据的在系统的流转环节停留时间短，错了也好排查</li>
<li>线下服务挂了，也不怕，仅仅影响数据的实时性，大部分功能还是可用的状态</li>
</ul>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">O2</span>O大法好</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u4EC0_u4E48_u662F_u6027_u80FD_u4F18_u5316O2O"><a href="#u4EC0_u4E48_u662F_u6027_u80FD_u4F18_u5316O2O" class="headerlink" title="什么是性]]>
    </summary>
    
      <category term="性能优化，O2O" scheme="http://wiki.niejinkun.com/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%EF%BC%8CO2O/"/>
    
      <category term="性能优化" scheme="http://wiki.niejinkun.com/categories/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[web文件安全]]></title>
    <link href="http://wiki.niejinkun.com/2016/10/23/%E2%95%AC%E2%94%80%E2%95%9D%E2%96%A0%E2%96%91%E2%96%93%E2%95%9A%D0%BB/"/>
    <id>http://wiki.niejinkun.com/2016/10/23/╬─╝■░▓╚л/</id>
    <published>2016-10-23T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h1 id="u6587_u4EF6_u5B89_u5168_u6280_u672F_u65B9_u6848"><a href="#u6587_u4EF6_u5B89_u5168_u6280_u672F_u65B9_u6848" class="headerlink" title="文件安全技术方案"></a>文件安全技术方案</h1><h2 id="u95EE_u9898_u63D0_u51FA"><a href="#u95EE_u9898_u63D0_u51FA" class="headerlink" title="问题提出"></a>问题提出</h2><p>公司需要向用户提供下载文件的接口。<br>如果直接向用户提供url，那么用户通过修改Url可以拿到别的用户的文件。<br>如果这份文件是关于用户账户的数据，<br>那么，这实在是太可怕了？</p>
<h2 id="u539F_u5219"><a href="#u539F_u5219" class="headerlink" title="原则"></a>原则</h2><ul>
<li>就是不要把 后端存储 直接暴露出去，不能让 客户端知道你的 文件服务器的 ip</li>
<li>权限控制</li>
</ul>
<h2 id="u600E_u4E48_u529E"><a href="#u600E_u4E48_u529E" class="headerlink" title="怎么办"></a>怎么办</h2><p>如果通过url提供用户下载，那么，通过猜的方法，理论上，肯定可以拿到别人的文件。<br>所以，需要从这方面做文章。</p>
<p>不能让用户知道你的文件路径url。<br>直接输出文件的二进制流，带个http response body当中。</p>
<p>伪代码如下：</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(<span class="string">"user/file/&#123;file_index&#125;"</span>)</span><br><span class="line"><span class="keyword">public</span> HttpServletResponse(<span class="built_in">int</span> file_index,HttpServletResponse <span class="built_in">response</span>)&#123;</span><br><span class="line">    user_id = userService.getUserId();</span><br><span class="line">    user_file = fileService.getFileByUserId(user_id,file_index);</span><br><span class="line">    <span class="built_in">String</span> file = FileUtils.getBody(user_file);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">response</span>.addHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename="</span> + <span class="keyword">new</span> <span class="built_in">String</span>(filename.getBytes()));</span><br><span class="line">    <span class="built_in">response</span>.addHeader(<span class="string">"Content-Length"</span>, <span class="string">""</span> + file.length());</span><br><span class="line">    OutputStream toClient = <span class="keyword">new</span> BufferedOutputStream(<span class="built_in">response</span>.getOutputStream());</span><br><span class="line">    <span class="built_in">response</span>.setContentType(<span class="string">"application/octet-stream"</span>);</span><br><span class="line">    toClient.write(buffer);</span><br><span class="line">    toClient.flush();</span><br><span class="line">    toClient.close();</span><br><span class="line"></span><br><span class="line">    return <span class="built_in">response</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="u4F18_u7F3A_u70B9"><a href="#u4F18_u7F3A_u70B9" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="u4F18_u70B9"><a href="#u4F18_u70B9" class="headerlink" title="优点"></a>优点</h3><ul>
<li>安全</li>
</ul>
<h3 id="u7F3A_u70B9"><a href="#u7F3A_u70B9" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>慢,因为文件需要走业务流量</li>
<li>性能差</li>
</ul>
<h2 id="u7ED3_u8BBA"><a href="#u7ED3_u8BBA" class="headerlink" title="结论"></a>结论</h2><p>如果能接受慢，性能差的缺点，那就OK了。</p>
<h2 id="u611F_u8C22"><a href="#u611F_u8C22" class="headerlink" title="感谢"></a>感谢</h2><p>感谢 “Alibaba Dubbo交流群2 472841355” 【Alibaba Dubbo交流群2】：<a href="http://jq.qq.com/?_wv=1027&amp;k=40lpJ14" target="_blank" rel="external">http://jq.qq.com/?_wv=1027&amp;k=40lpJ14</a><br>感谢群里面的各位大神。</p>
<ul>
<li>凌封</li>
<li>想</li>
<li>rubin</li>
<li>tea</li>
<li>等等</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u6587_u4EF6_u5B89_u5168_u6280_u672F_u65B9_u6848"><a href="#u6587_u4EF6_u5B89_u5168_u6280_u672F_u65B9_u6848" class="headerlink" title]]>
    </summary>
    
      <category term="安全" scheme="http://wiki.niejinkun.com/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="安全" scheme="http://wiki.niejinkun.com/categories/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git最佳实践]]></title>
    <link href="http://wiki.niejinkun.com/2016/10/23/git%E2%95%AB%D1%8E%E2%95%9D%E2%95%A4%E2%95%A9%E2%95%A1%E2%95%9D%E2%88%99/"/>
    <id>http://wiki.niejinkun.com/2016/10/23/git╫ю╝╤╩╡╝∙/</id>
    <published>2016-10-23T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.558Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><ul>
<li>git是分布式版本控制系统</li>
<li>git是协作系统</li>
<li>svn是功能机，git是智能机，他们的用户体验差了一个时代，生产效率更是上了一个台阶</li>
<li>git是一种生活方式</li>
<li>git 配合sourcetree,是最佳实践，当然，可再配合jenkins使用</li>
<li>github,gitlab自建review board.无缝集成review board</li>
<li>gitlab是github的开源实现，企业可以使用gitlab,搭建自己的git环境。</li>
</ul>
<h2 id="u5F00_u53D1_u6A21_u5F0F"><a href="#u5F00_u53D1_u6A21_u5F0F" class="headerlink" title="开发模式"></a>开发模式</h2><ul>
<li>分支开发，主干分布</li>
<li>master分支，只有运维管理员有权限操作,运维使用master的分支进行线上发布</li>
<li>develop分支，只有code review权限的人员有权限操作，通过code review后，合并进develop分支</li>
<li>develop_njp（名字）分支，控制权为个人，个人在该分支下进行操作</li>
</ul>
<h2 id="u5F00_u53D1_u6D41_u7A0B"><a href="#u5F00_u53D1_u6D41_u7A0B" class="headerlink" title="开发流程"></a>开发流程</h2><ul>
<li>新建项目：通过运维管理员申请创建项目，包括项目名称，参与人，角色</li>
<li>开发人员从delevop pull项目，创建自己的分支，命令为develop_xxx</li>
<li>开发人员在develop_xxx下进行开发，自行控制版本</li>
<li>开发人员自行进行单元测试，测试通过后，将项目push到develop_xxx</li>
<li>开发人员切换到develop分支，将develop分支中的更新，合并到自己的分支上</li>
<li>开发人员将合并后的develop_xxx分支，push推送到develop分支上</li>
<li>code review自动开始</li>
<li>code review通过，自动发邮件给开发</li>
<li>code review未通过，自动发邮件给开发</li>
</ul>
<p>分支merge，push,通过神器source tree即可。</p>
<h2 id="u6700_u4F73_u5B9E_u8DF5"><a href="#u6700_u4F73_u5B9E_u8DF5" class="headerlink" title="最佳实践"></a>最佳实践</h2><ul>
<li>gitlab</li>
<li>sourcetree</li>
<li>jenkins<br>gitlab + sourcetree +　jenkins构建企业级代码管理CI（持续集成)系统</li>
</ul>
<h2 id="u5EFA_u8BAE"><a href="#u5EFA_u8BAE" class="headerlink" title="建议"></a>建议</h2><ul>
<li>一个人负责一个项目，减少沟通成本</li>
<li>一个人负责一个项目，提高开发的自主能力</li>
<li>每个人关注自己的边界，针对边界编程</li>
</ul>
<h2 id="u6F14_u793A"><a href="#u6F14_u793A" class="headerlink" title="演示"></a>演示</h2><p>   下面以github为例，进行演示。</p>
<h2 id="u611F_u8C22"><a href="#u611F_u8C22" class="headerlink" title="感谢"></a>感谢</h2><ul>
<li>github</li>
<li>sourcetree</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><ul>
<li>git是分布式版本控制系统</li>
<li>git是协作系统</li>
<li>svn是功]]>
    </summary>
    
      <category term="git" scheme="http://wiki.niejinkun.com/tags/git/"/>
    
      <category term="沟通协作" scheme="http://wiki.niejinkun.com/categories/%E6%B2%9F%E9%80%9A%E5%8D%8F%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MySql编码规范]]></title>
    <link href="http://wiki.niejinkun.com/2016/10/19/mysql%E2%96%92%D1%80%E2%94%AC%D1%8B%E2%95%A3%D1%86%E2%95%96%E2%95%A2/"/>
    <id>http://wiki.niejinkun.com/2016/10/19/mysql▒р┬ы╣ц╖╢/</id>
    <published>2016-10-19T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><ul>
<li>mysql是互联网事实上的标准</li>
<li>mysql性能对付中小型网站足够了，在没有到性能瓶颈前，可以先不上缓存系统。</li>
<li>MySQL的查询速度依赖良好的索引设计，因此索引对于高性能至关重要。合理的索引会加快查询速度，不合理的索引会降低速度。</li>
</ul>
<h2 id="u89C4_u5219"><a href="#u89C4_u5219" class="headerlink" title="规则"></a>规则</h2><h3 id="u8868_u8BBE_u8BA1"><a href="#u8868_u8BBE_u8BA1" class="headerlink" title="表设计"></a>表设计</h3><ol>
<li>库名、表名、字段名必须使用小写字母，“_”分割。</li>
<li>库名、表名、字段名必须不超过12个字符。</li>
<li>库名、表名、字段名见名知意,建议使用名词而不是动词。</li>
<li>强制使用InnoDB存储引擎。</li>
<li>必须有惟一键</li>
<li>存储精确浮点数必须使用DECIMAL替代FLOAT和DOUBLE。</li>
<li>建议使用UNSIGNED存储非负数值。</li>
<li>建议使用INT UNSIGNED存储IPV4。</li>
<li>整形定义中不添加长度，比如使用INT，而不是INT(4)。</li>
<li>使用短数据类型，比如取值范围为0-80时，使用TINYINT UNSIGNED。</li>
<li>不建议使用ENUM类型，使用TINYINT来代替。</li>
<li>尽可能不使用TEXT、BLOB类型。</li>
<li>VARCHAR(N)，N表示的是字符数不是字节数，比如VARCHAR(255)，可以最大可存储255个汉字，需要根据实际的宽度来选择N。<br>. VARCHAR(N)，N尽可能小，因为MySQL一个表中所有的VARCHAR字段最大长度是65535个字节，进行排序和创建临时表一类的内存操作时，会使用N的长度申请内存。</li>
<li>表字符集选择UTF8。</li>
<li>使用VARBINARY存储变长字符串。</li>
<li>存储年使用YEAR类型。</li>
<li>存储日期使用DATE类型。</li>
<li>存储时间（精确到秒）建议使用TIMESTAMP类型，因为TIMESTAMP使用4字节，DATETIME使用8个字节。</li>
<li>建议字段定义为NOT NULL。</li>
<li>将过大字段拆分到其他表中。</li>
<li>禁止在数据库中使用VARBINARY、BLOB存储图片、文件等。</li>
<li>表结构变更需要通知DBA审核。</li>
</ol>
<h3 id="u7D22_u5F15"><a href="#u7D22_u5F15" class="headerlink" title="索引"></a>索引</h3><ol>
<li>非唯一索引必须按照“idx<em>字段名称</em>字段名称[_字段名]”进行命名。</li>
<li>唯一索引必须按照“uniq<em>字段名称</em>字段名称[_字段名]”进行命名。</li>
<li>索引名称必须使用小写。</li>
<li>索引中的字段数建议不超过5个。</li>
<li>单张表的索引数量控制在5个以内。</li>
<li>唯一键由3个以下字段组成，并且字段都是整形时，使用唯一键作为主键。</li>
<li>没有唯一键或者唯一键不符合5中的条件时，使用自增（或者通过发号器获取）id作为主键。</li>
<li>唯一键不和主键重复。</li>
<li>索引字段的顺序需要考虑字段值去重之后的个数，个数多的放在前面。</li>
<li>ORDER BY，GROUP BY，DISTINCT的字段需要添加在索引的后面。</li>
<li>使用EXPLAIN判断SQL语句是否合理使用索引，尽量避免extra列出现：Using File Sort，Using Temporary。</li>
<li>UPDATE、DELETE语句需要根据WHERE条件添加索引。</li>
<li>不建议使用%前缀模糊查询，例如LIKE “%weibo”。</li>
<li>对长度过长的VARCHAR字段建立索引时，添加crc32或者MD5 </li>
<li>Hash字段，对Hash字段建立索引。</li>
<li>合理创建联合索引（避免冗余），(a,b,c) 相当于 (a) 、(a,b) 、(a,b,c)。</li>
<li>合理利用覆盖索引。</li>
<li>SQL变更需要确认索引是否需要变更并通知DBA。</li>
</ol>
<h3 id="SQL_u8BED_u53E5"><a href="#SQL_u8BED_u53E5" class="headerlink" title="SQL语句"></a>SQL语句</h3><ol>
<li>使用prepared statement，可以提供性能并且避免SQL注入。</li>
<li>SQL语句中IN包含的值不应过多。</li>
<li>UPDATE、DELETE语句不使用LIMIT。</li>
<li>WHERE条件中必须使用合适的类型，避免MySQL进行隐式类型转化。</li>
<li>SELECT语句只获取需要的字段。</li>
<li>SELECT、INSERT语句必须显式的指明字段名称，不使用SELECT *，不使用INSERT INTO table()。</li>
<li>使用SELECT column_name1, column_name2 FROM table WHERE [condition]而不是SELECT column_name1 FROM table WHERE [condition]和SELECT column_name2 FROM table WHERE [condition]。</li>
<li>WHERE条件中的非等值条件（IN、BETWEEN、&lt;、&lt;=、&gt;、&gt;=）会导致后面的条件使用不了索引。</li>
<li>避免在SQL语句进行数学运算或者函数运算，容易将业务逻辑和DB耦合在一起。</li>
<li>INSERT语句使用batch提交（INSERT INTO table VALUES(),(),()……），values的个数不应过多。</li>
<li>避免使用存储过程、触发器、函数等，容易将业务逻辑和DB耦合在一起，并且MySQL的存储过程、触发器、函数中存在一定的bug。</li>
<li>避免使用JOIN。</li>
<li>使用合理的SQL语句减少与数据库的交互次数。</li>
<li>不使用ORDER BY RAND()，使用其他方法替换。</li>
<li>建议使用合理的分页方式以提高分页的效率。</li>
<li>统计表中记录数时使用COUNT(*)，而不是COUNT(primary_key)和COUNT(1)。</li>
<li>禁止在从库上执行后台管理和统计类型功能的QUERY。</li>
</ol>
<h3 id="u6563_u8868"><a href="#u6563_u8868" class="headerlink" title="散表"></a>散表</h3><ol>
<li>对于字段类型简单，字段数不多表，单表数据量建议控制在5000w以下。</li>
<li>可以结合使用hash1、range、lookup table进行散表。</li>
<li>散表如果使用md5（或者类似的hash算法）进行散表，表名后缀使用16进制，比如user_ff。</li>
<li>推荐使用CRC32求余（或者类似的算术算法）进行散表，表名后缀使用数字，数字必须从0开始并等宽，比如散100张表，后缀从00-99。</li>
<li>使用时间散表，表名后缀必须使用特定格式，比如按日散表user_20110209、按月散表user_201102。</li>
</ol>
<h3 id="u5176_u4ED6"><a href="#u5176_u4ED6" class="headerlink" title="其他"></a>其他</h3><ol>
<li>批量导入、导出数据需要DBA进行审查，并在执行过程中观察服务。</li>
<li>批量更新数据，如update,delete 操作，需要DBA进行审查，并在执行过程中观察服务。</li>
<li>产品出现非数据库平台运维导致的问题和故障时，如前端被抓站，请及时通知DBA，便于维护服务稳定。</li>
<li>业务部门程序出现bug等影响数据库服务的问题,请及时通知DBA，便于维护服务稳定。</li>
<li>业务部门推广活动，请提前通知DBA进行服务和访问评估。</li>
<li>如果出现业务部门人为误操作导致数据丢失，需要恢复数据，请在第一时间通知DBA，并提供准确时间，误操作语句等重要线索。</li>
</ol>
<h2 id="u611F_u8C22"><a href="#u611F_u8C22" class="headerlink" title="感谢"></a>感谢</h2><p><a href="http://www.imcjd.com/?p=1237" target="_blank" rel="external">MySQL开发规范</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><ul>
<li>mysql是互联网事实上的标准</li>
<li>mysql性能对付中小型网站足够了，在没有]]>
    </summary>
    
      <category term="mysql" scheme="http://wiki.niejinkun.com/tags/mysql/"/>
    
      <category term="性能" scheme="http://wiki.niejinkun.com/tags/%E6%80%A7%E8%83%BD/"/>
    
      <category term="mysql" scheme="http://wiki.niejinkun.com/categories/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[性能优化总结]]></title>
    <link href="http://wiki.niejinkun.com/2016/10/17/%E2%95%A8%E2%95%98%E2%94%80%E2%96%84%E2%95%99%E2%94%BC%E2%95%97%D0%BF%E2%95%AB%E2%96%84%E2%95%9C%D1%81/"/>
    <id>http://wiki.niejinkun.com/2016/10/17/╨╘─▄╙┼╗п╫▄╜с/</id>
    <published>2016-10-17T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h1 id="u6027_u80FD_u4F18_u5316_u600E_u4E48_u641E"><a href="#u6027_u80FD_u4F18_u5316_u600E_u4E48_u641E" class="headerlink" title="性能优化怎么搞"></a>性能优化怎么搞</h1><h2 id="u95EE_u9898_u63D0_u51FA"><a href="#u95EE_u9898_u63D0_u51FA" class="headerlink" title="问题提出"></a>问题提出</h2><ul>
<li>压力不大,系统居然挂了</li>
<li>QPS,TPS上不来</li>
<li>先重启系统再说</li>
</ul>
<h2 id="u539F_u56E0_u5206_u6790"><a href="#u539F_u56E0_u5206_u6790" class="headerlink" title="原因分析"></a>原因分析</h2><ul>
<li>CPU是不是满了</li>
<li>内存是不是不够用了</li>
<li>disk是不是频繁的读写</li>
<li>网络io是不是爆了</li>
</ul>
<h2 id="u600E_u4E48_u529E"><a href="#u600E_u4E48_u529E" class="headerlink" title="怎么办"></a>怎么办</h2><ul>
<li>理论</li>
<li>工具</li>
</ul>
<h2 id="u7406_u8BBA"><a href="#u7406_u8BBA" class="headerlink" title="理论"></a>理论</h2><p>性能调优是一个系统工程,<br>需要从整体上去分析系统性能,<br>理论是最好的武器</p>
<h3 id="u57FA_u672C_u7406_u8BBA_u70B9"><a href="#u57FA_u672C_u7406_u8BBA_u70B9" class="headerlink" title="基本理论点"></a>基本理论点</h3><ul>
<li>操作系统</li>
<li>进程,线程</li>
<li>同步,异步</li>
<li>计算机网络</li>
<li>JVM,GC,JMM</li>
</ul>
<h3 id="u4E00_u4E9B_u53C2_u8003_u6570_u636E"><a href="#u4E00_u4E9B_u53C2_u8003_u6570_u636E" class="headerlink" title="一些参考数据"></a>一些参考数据</h3><ul>
<li>人人网首页亿级PV,部署10台服务器</li>
<li>搜狗搜索,10台服务器</li>
<li>1号店:读服务 小于20ms,写服务 小于50ms</li>
<li>58同城搜索服务:单台机器9000 QPS<br>上述数据来源于infoq,或其它公开分享．</li>
</ul>
<h2 id="u5DE5_u5177"><a href="#u5DE5_u5177" class="headerlink" title="工具"></a>工具</h2><p>工欲善其事,必先利其器<br>或者说,实践是检验真理的惟一标准</p>
<h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><p>查看CPU有两条指令.</p>
<ul>
<li>top</li>
<li>uptime<br>uptime是top命令的子集.只要查看CPU的负载.一般而言,压力测试,首先就要看CPU利用率是否随压力的上升而上升.对于设计良好的系统而言.压力和CPU利用率(load average)是线性关系的.</li>
</ul>
<h4 id="uptime"><a href="#uptime" class="headerlink" title="uptime"></a>uptime</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span>:<span class="number">01</span>:<span class="number">14</span> up <span class="number">161</span> days, <span class="number">16</span>:<span class="number">48</span>,  <span class="number">2</span> users,  load average: <span class="number">0.01</span>, <span class="number">0.04</span>, <span class="number">0.05</span></span><br></pre></td></tr></table></figure>
<ul>
<li>load average(负载)需要考虑cpu的核数.</li>
<li>负载系数(load average / cpu core count)</li>
<li>当负载系数达到 0.7时，需要考虑加机器了</li>
<li>当负载系统达到1时，系统达到了最大性能</li>
<li>当负载系统达到1.2时，用户的请求开始阻塞了</li>
</ul>
<h3 id="u5185_u5B58"><a href="#u5185_u5B58" class="headerlink" title="内存"></a>内存</h3><p>当内存不足时，系统性能会严重下降，但这种不常见．留意一下即可．</p>
<h4 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">niejinping@ubuntu$vmstat <span class="number">3</span> <span class="number">100</span></span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"> r  b   swpd   <span class="built_in">free</span>   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> <span class="number">1</span>  <span class="number">0</span>  <span class="number">87244</span> <span class="number">222132</span> <span class="number">116088</span> <span class="number">29564036</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">1</span>    <span class="number">0</span>    <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"> <span class="number">1</span>  <span class="number">0</span>  <span class="number">87244</span> <span class="number">222744</span> <span class="number">116088</span> <span class="number">29564036</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>    <span class="number">12</span>  <span class="number">232</span>  <span class="number">544</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br><span class="line"> <span class="number">0</span>  <span class="number">0</span>  <span class="number">87244</span> <span class="number">223044</span> <span class="number">116088</span> <span class="number">29564068</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>  <span class="number">255</span>  <span class="number">639</span>  <span class="number">0</span>  <span class="number">0</span> <span class="number">100</span>  <span class="number">0</span>  <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h3 id="u78C1_u76D8io"><a href="#u78C1_u76D8io" class="headerlink" title="磁盘io"></a>磁盘io</h3><p>磁盘的性能比内存差1w倍．说个案例</p>
<ul>
<li>某公司某服务大量写日志，把磁盘干爆，不得不重启，然后删除日志</li>
<li>某公司接入微信，接入前做压力测试，QPS一直上不去．<br>你知道后来怎么解决的吗？<br>查看磁盘的状态可使用dstat命令<h4 id="dstat"><a href="#dstat" class="headerlink" title="dstat"></a>dstat</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">niejinping@ubuntu$dstat</span><br><span class="line">----total-cpu-usage---- -dsk/total- -net/total- ---paging-- ---system--</span><br><span class="line">usr sys idl wai hiq siq| read  writ| recv  send|  in   out | <span class="keyword">int</span>   csw </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|<span class="number">1429</span>B   <span class="number">21</span>k|   <span class="number">0</span>     <span class="number">0</span> |   <span class="number">1</span>B    <span class="number">8</span>B| <span class="number">271</span>   <span class="number">727</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>     <span class="number">0</span> |<span class="number">1866</span>B <span class="number">1990</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">253</span>   <span class="number">590</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>    <span class="number">28</span>k|<span class="number">1260</span>B  <span class="number">915</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">272</span>   <span class="number">836</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>     <span class="number">0</span> |<span class="number">1784</span>B <span class="number">1121</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">163</span>   <span class="number">365</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>     <span class="number">0</span> |<span class="number">1652</span>B <span class="number">1185</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">203</span>   <span class="number">497</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>     <span class="number">0</span> |<span class="number">1943</span>B <span class="number">1587</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">284</span>   <span class="number">706</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>     <span class="number">0</span> |<span class="number">1102</span>B  <span class="number">458</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">200</span>   <span class="number">489</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>     <span class="number">0</span> |<span class="number">2314</span>B <span class="number">1259</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">213</span>   <span class="number">515</span> </span><br><span class="line">  <span class="number">0</span>   <span class="number">0</span> <span class="number">100</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>|   <span class="number">0</span>    <span class="number">16</span>k|<span class="number">1665</span>B <span class="number">1363</span>B|   <span class="number">0</span>     <span class="number">0</span> | <span class="number">203</span>   <span class="number">496</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>如果磁盘读写异常，dst/total里面的数据会很夸张的哦，一看就知道了．</p>
<h4 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">niejinping@ubuntu$iostat</span><br><span class="line">Linux <span class="number">3.13</span><span class="number">.0</span>-<span class="number">86</span>-generic (JHJR-Home-<span class="number">01</span>)  <span class="number">10</span>/<span class="number">18</span>/<span class="number">16</span>        _x86_64_        (<span class="number">32</span> CPU)</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class="line">           <span class="number">0.11</span>    <span class="number">0.00</span>    <span class="number">0.05</span>    <span class="number">0.01</span>    <span class="number">0.00</span>   <span class="number">99.83</span></span><br><span class="line"></span><br><span class="line">Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">sda               <span class="number">0.66</span>         <span class="number">4.45</span>        <span class="number">20.60</span>   <span class="number">62214026</span>  <span class="number">287806841</span></span><br></pre></td></tr></table></figure>
<p>上面的tps就是iops.kB_wrtn/s如果很大，说明有大量的写操作了．要注意．</p>
<h5 id="u6027_u80FD_u53C2_u8003_u503C"><a href="#u6027_u80FD_u53C2_u8003_u503C" class="headerlink" title="性能参考值"></a>性能参考值</h5><table>
<thead>
<tr>
<th>类型</th>
<th>IOPS</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>普通硬盘</td>
<td>100量级</td>
<td>慢，便宜</td>
</tr>
<tr>
<td>SSD</td>
<td>10000量级</td>
<td>非常快，贵</td>
</tr>
</tbody>
</table>
<h3 id="u7F51_u7EDC"><a href="#u7F51_u7EDC" class="headerlink" title="网络"></a>网络</h3><p>说个案例：</p>
<ul>
<li>大量的socket连接，把tomcat挂了．</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">niejinping@ubuntu$lsof -p <span class="number">17624</span>  </span><br><span class="line">COMMAND   PID    USER   FD   TYPE    DEVICE  SIZE/OFF      NODE NAME</span><br><span class="line">java    <span class="number">17624</span> product  cwd    DIR       <span class="number">8</span>,<span class="number">2</span>      <span class="number">4096</span>   <span class="number">1971016</span> /home/product</span><br><span class="line">java    <span class="number">17624</span> product  rtd    DIR       <span class="number">8</span>,<span class="number">2</span>      <span class="number">4096</span>         <span class="number">2</span> /</span><br></pre></td></tr></table></figure>
<p>wc统计一下，发现socket超过65535了，直接把tomcat挂了．</p>
<ul>
<li>大量复杂对象序列化在网络上传，把网卡搞爆<br>这个不好搞，要业务重构了．</li>
</ul>
<h3 id="u7EBF_u7A0B"><a href="#u7EBF_u7A0B" class="headerlink" title="线程"></a>线程</h3><p>线程可以提高系统的性能，这句话容易产生误导．<br>合理的使用线程，才能提高程序的性能．在设置线程的参数时．需要考虑以下几个方面：</p>
<ul>
<li>面向IO还是面向CPU</li>
<li>CPU的核数</li>
<li>线上服务还是线下服务</li>
<li>锁，锁，锁<h4 id="u9762_u5411CPU"><a href="#u9762_u5411CPU" class="headerlink" title="面向CPU"></a>面向CPU</h4></li>
<li>线程设置为CPU核数即可．</li>
</ul>
<h4 id="u9762_u5411IO"><a href="#u9762_u5411IO" class="headerlink" title="面向IO"></a>面向IO</h4><ul>
<li>线程数可以设置大一些</li>
</ul>
<h4 id="u9501"><a href="#u9501" class="headerlink" title="锁"></a>锁</h4><p>这个就麻烦了，越大，抢锁的概述就越高，这时候线程们可能一直在抢锁，什么也没干．<br>给我们的启示是：</p>
<ul>
<li>如果线程设置不合理，大家都很忙，大家又好像什么都没干</li>
</ul>
<h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内存管理是一个围城，搞<span class="keyword">C</span>/<span class="keyword">C</span>++的人想跳进去，搞JAVA的人想跳出来．</span><br></pre></td></tr></table></figure>
<p>java程序员不需要在程序代码中管理内存，这是最容易出问题的地方．<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JVM参数设置不合理，会严重影响程序的性能，这种事情一再发生．</span><br></pre></td></tr></table></figure></p>
<ul>
<li>了解JVM的内存模型，以及分代机制，以利于合理确定JVM参数</li>
<li>JDK提供了非常多的工具，供程序员使用．</li>
</ul>
<h3 id="JVM_u5E38_u7528_u5DE5_u5177"><a href="#JVM_u5E38_u7528_u5DE5_u5177" class="headerlink" title="JVM常用工具"></a>JVM常用工具</h3><ul>
<li>jstat</li>
<li>jstatd</li>
<li>jinfo</li>
<li>jmap</li>
<li>jstack</li>
<li>jconsole</li>
<li>visualvm</li>
<li>jmc</li>
</ul>
<h4 id="jstat"><a href="#jstat" class="headerlink" title="jstat"></a>jstat</h4><p>这个主要看JVM的GC情况，使用最多．<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  S0     S1     E      O      P     YGC     YGCT    FGC    FGCT     GCT   </span><br><span class="line"><span class="number">100.00</span>   <span class="number">0.00</span>  <span class="number">41.64</span>   <span class="number">1.00</span>  <span class="number">82.13</span>      <span class="number">4</span>    <span class="number">0.411</span>     <span class="number">2</span>    <span class="number">0.315</span>    <span class="number">0.726</span></span><br><span class="line"><span class="number">100.00</span>   <span class="number">0.00</span>  <span class="number">41.64</span>   <span class="number">1.00</span>  <span class="number">82.13</span>      <span class="number">4</span>    <span class="number">0.411</span>     <span class="number">2</span>    <span class="number">0.315</span>    <span class="number">0.726</span></span><br><span class="line"><span class="number">100.00</span>   <span class="number">0.00</span>  <span class="number">41.64</span>   <span class="number">1.00</span>  <span class="number">82.13</span>      <span class="number">4</span>    <span class="number">0.411</span>     <span class="number">2</span>    <span class="number">0.315</span>    <span class="number">0.726</span></span><br></pre></td></tr></table></figure></p>
<h4 id="jstatd"><a href="#jstatd" class="headerlink" title="jstatd"></a>jstatd</h4><p>开启远程监控使用的．</p>
<h4 id="jinfo"><a href="#jinfo" class="headerlink" title="jinfo"></a>jinfo</h4><p>可以看java进程的启动参数</p>
<h4 id="jmap"><a href="#jmap" class="headerlink" title="jmap"></a>jmap</h4><p>看java进程内的对象</p>
<h4 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h4><p>看线程状态．可以分析死锁．<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"http-9096-exec-1011"</span> daemon prio=<span class="number">10</span> tid=<span class="number">0</span>x00007f2b34022800 nid=<span class="number">0</span>x7b40 waiting <span class="keyword">for</span> monitor entry [<span class="number">0</span>x00007f2824e0c000]</span><br><span class="line">   java<span class="class">.lang</span><span class="class">.Thread</span><span class="class">.State</span>: BLOCKED (on <span class="tag">object</span> monitor)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.log4j</span><span class="class">.Category</span><span class="class">.callAppenders</span>(Category<span class="class">.java</span>:<span class="number">204</span>)</span><br><span class="line">	- waiting to lock &lt;<span class="number">0</span>x00007f2c0cf662e0&gt; (<span class="tag">a</span> org<span class="class">.apache</span><span class="class">.log4j</span><span class="class">.spi</span><span class="class">.RootLogger</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.log4j</span><span class="class">.Category</span><span class="class">.forcedLog</span>(Category<span class="class">.java</span>:<span class="number">391</span>)</span><br><span class="line">	at org<span class="class">.apache</span><span class="class">.log4j</span><span class="class">.Category</span><span class="class">.log</span>(Category<span class="class">.java</span>:<span class="number">856</span>)</span><br></pre></td></tr></table></figure></p>
<p>上面就是大量的线程在抢log4j的文件锁．</p>
<h4 id="jconsole"><a href="#jconsole" class="headerlink" title="jconsole"></a>jconsole</h4><p>仪表盘式工具，可看cpu,类，gc,线程信息，不如visualvm好用．优点是jdk自带</p>
<h4 id="visualvm"><a href="#visualvm" class="headerlink" title="visualvm"></a>visualvm</h4><p>非常好用的工具，带丰富的插件．</p>
<h4 id="jmc"><a href="#jmc" class="headerlink" title="jmc"></a>jmc</h4><p>这个更好用的，但对jdk有版本要求．要求jdk7u40以上的版本．</p>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><ul>
<li>理论来指导</li>
<li>还要手术刀</li>
</ul>
<h3 id="u5206_u6790_u8FC7_u7A0B"><a href="#u5206_u6790_u8FC7_u7A0B" class="headerlink" title="分析过程"></a>分析过程</h3><ol>
<li>看CPU负载</li>
<li>看GC情况</li>
<li>看硬盘io</li>
<li>看网络io</li>
<li>看线程状态</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u6027_u80FD_u4F18_u5316_u600E_u4E48_u641E"><a href="#u6027_u80FD_u4F18_u5316_u600E_u4E48_u641E" class="headerlink" title="性能优化怎么搞"><]]>
    </summary>
    
      <category term="java" scheme="http://wiki.niejinkun.com/tags/java/"/>
    
      <category term="jvm" scheme="http://wiki.niejinkun.com/tags/jvm/"/>
    
      <category term="性能，架构" scheme="http://wiki.niejinkun.com/tags/%E6%80%A7%E8%83%BD%EF%BC%8C%E6%9E%B6%E6%9E%84/"/>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java API文档一体化集成实践]]></title>
    <link href="http://wiki.niejinkun.com/2016/08/25/Java%20API%E2%95%AC%E2%94%80%E2%95%A1%E2%95%A1%E2%95%A5%E2%95%97%E2%95%A0%D1%85%E2%95%97%D0%BF%E2%95%A9%E2%95%A1%E2%95%9D%E2%88%99/"/>
    <id>http://wiki.niejinkun.com/2016/08/25/Java API╬─╡╡╥╗╠х╗п╩╡╝∙/</id>
    <published>2016-08-25T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.558Z</updated>
    <content type="html"><![CDATA[<h1 id="springboot_api_u6587_u6863_u5728_u7EBF_u751F_u6210demo"><a href="#springboot_api_u6587_u6863_u5728_u7EBF_u751F_u6210demo" class="headerlink" title="springboot api文档在线生成demo"></a>springboot api文档在线生成demo</h1><p> api文档和代码同步是一个麻烦的问题。程序员中有一个笑话是：</p>
<ul>
<li>我讨厌写文档</li>
<li><p>我讨厌没有文档</p>
<p>即使有文档，也不保证文档和代码是一致的，特别是随着时间的推移，API文档和代码不同步的情况更严重。</p>
<p>因此，解决办法就是，将API文档植入到代码当中。这样，同步性的问题基本解决。</p>
<p>但是，需要考虑一个问题，就是API文档的安全性。文档和API一起发布在线上，那么需要避免API文档被外界窃取。<br>当然，方法是有的。</p>
<h2 id="u6587_u6863_u4EE3_u7801_u4E00_u4F53_u5316"><a href="#u6587_u6863_u4EE3_u7801_u4E00_u4F53_u5316" class="headerlink" title="文档代码一体化"></a>文档代码一体化</h2><p>采用swagger开源插件，即可完美解决API文档和代码的一致性问题。</p>
<h2 id="u5B89_u5168_u95EE_u9898"><a href="#u5B89_u5168_u95EE_u9898" class="headerlink" title="安全问题"></a>安全问题</h2><p>通过拦截机制，在生产环境下，拦截API文档的URL.测试环境下，打开API文档的URL.</p>
</li>
</ul>
<h2 id="u76F8_u5173_u4F9D_u8D56"><a href="#u76F8_u5173_u4F9D_u8D56" class="headerlink" title="相关依赖"></a>相关依赖</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">compile</span>("<span class="tag">io</span><span class="class">.springfox</span><span class="pseudo">:springfox-swagger2</span><span class="pseudo">:2</span><span class="class">.5</span><span class="class">.0</span>")</span><br><span class="line"><span class="tag">compile</span>("<span class="tag">io</span><span class="class">.springfox</span><span class="pseudo">:springfox-swagger-ui</span><span class="pseudo">:2</span><span class="class">.5</span><span class="class">.0</span>")</span><br></pre></td></tr></table></figure>
<h2 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h2><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> SwaggerDocumentationConfig &#123;</span><br><span class="line"></span><br><span class="line">    ApiInfo apiInfo() &#123;</span><br><span class="line">        return <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">            .title(<span class="string">"MY API"</span>)</span><br><span class="line">            .description(<span class="string">"Move your app forward with the MY API"</span>)</span><br><span class="line">            .license(<span class="string">"sanhao"</span>)</span><br><span class="line">            .licenseUrl(<span class="string">"sanhao"</span>)</span><br><span class="line">            .termsOfServiceUrl(<span class="string">"sanhao"</span>)</span><br><span class="line">            .version(<span class="string">"1.0.0"</span>)</span><br><span class="line">            .contact(<span class="keyword">new</span> Contact(<span class="string">"niejinping"</span>,<span class="string">"www.sanhao.com"</span>, <span class="string">"297206021@qq.com"</span>))</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    <span class="keyword">public</span> Docket customImplementation()&#123;</span><br><span class="line">        return <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .<span class="keyword">select</span>()</span><br><span class="line">                    .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.niejinkun.springbootgradle.api"</span>))</span><br><span class="line">                    .build()</span><br><span class="line">                .directModelSubstitute(org.joda.<span class="built_in">time</span>.LocalDate.<span class="keyword">class</span>, java.sql.<span class="built_in">Date</span>.<span class="keyword">class</span>)</span><br><span class="line">                .directModelSubstitute(org.joda.<span class="built_in">time</span>.DateTime.<span class="keyword">class</span>, java.util.<span class="built_in">Date</span>.<span class="keyword">class</span>)</span><br><span class="line">                .apiInfo(apiInfo());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="u5B89_u5168_u8BBE_u7F6E"><a href="#u5B89_u5168_u8BBE_u7F6E" class="headerlink" title="安全设置"></a>安全设置</h2><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">protected void configure(<span class="type">HttpSecurity</span> http) throws <span class="type">Exception</span> &#123;</span><br><span class="line">    http.authorizeRequests<span class="literal">()</span>.antMatchers(<span class="string">"/swagger-ui.html"</span>).authenticated<span class="literal">()</span>.<span class="keyword">and</span><span class="literal">()</span>.httpBasic<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(api_enable == <span class="literal">false</span>) &#123;</span><br><span class="line">        http.authorizeRequests<span class="literal">()</span>.antMatchers(<span class="string">"/swagger-ui.html"</span>).denyAll<span class="literal">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    http.csrf<span class="literal">()</span>.disable<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="type">Autowired</span></span><br><span class="line">public void configureGlobal(<span class="type">AuthenticationManagerBuilder</span> auth) throws <span class="type">Exception</span> &#123;</span><br><span class="line">    auth</span><br><span class="line">            .inMemoryAuthentication<span class="literal">()</span></span><br><span class="line">            .withUser(user).password(password).roles(<span class="string">"USER"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="API_u53D1_u5E03"><a href="#API_u53D1_u5E03" class="headerlink" title="API发布"></a>API发布</h2><p>使用注解即可完成API的发布</p>
<ul>
<li>ApiOperation : api基于说明</li>
<li>ApiResponses : API响应结果说明</li>
<li>ApiParam : API参数说明<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@RestController</span></span><br><span class="line"><span class="annotation">@RequestMapping</span>(<span class="string">"/api"</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ApiController</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@RequestMapping</span>(value = <span class="string">"user/&#123;name&#125;/&#123;password&#125;"</span>,method= RequestMethod.GET,produces = <span class="string">"application/json"</span>)</span><br><span class="line">    <span class="annotation">@ApiOperation</span>(value=<span class="string">"测试-user"</span>, notes=<span class="string">"获取用户名"</span>,response = User.<span class="keyword">class</span>)</span><br><span class="line">    <span class="annotation">@ApiResponses</span>(value = &#123;</span><br><span class="line">        <span class="annotation">@ApiResponse</span>(code = <span class="number">200</span>, message = <span class="string">"返回结果正常"</span>, response = User.<span class="keyword">class</span>),</span><br><span class="line">        <span class="annotation">@ApiResponse</span>(code = <span class="number">201</span>, message = <span class="string">"返回结果异常"</span>, response = User.<span class="keyword">class</span>) &#125;)</span><br><span class="line">    public User user(  <span class="annotation">@ApiParam</span>(required=<span class="keyword">true</span>, name=<span class="string">"name"</span>, value=<span class="string">"姓名"</span>) <span class="annotation">@PathVariable</span>(<span class="string">"name"</span>)<span class="built_in">String</span> name,</span><br><span class="line">                       <span class="annotation">@ApiParam</span>(required=<span class="keyword">true</span>, name=<span class="string">"password"</span>, value=<span class="string">"密码"</span>) <span class="annotation">@PathVariable</span>(<span class="string">"password"</span>)<span class="built_in">String</span> password</span><br><span class="line">    )&#123;</span><br><span class="line">        <span class="comment">// DO YOUR LOGIC HERE</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(<span class="number">1</span>,name,password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@ApiIgnore</span><span class="comment">//使用该注解忽略这个API</span></span><br><span class="line">    <span class="annotation">@RequestMapping</span>(value = <span class="string">"/ignore"</span>)</span><br><span class="line">    public <span class="built_in">String</span> ignore() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ignore"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="u6548_u679C_u56FE"><a href="#u6548_u679C_u56FE" class="headerlink" title="效果图"></a>效果图</h2><p>输入：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http:</span><span class="comment">//localhost:8090/v1/api-docs</span></span><br></pre></td></tr></table></figure></p>
<p>返回：josn格式API说明，可以有editor.swagger.io里面直接查看。<br>输入<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http:</span><span class="comment">//localhost:8090/v1/swagger-ui.html</span></span><br></pre></td></tr></table></figure></p>
<p>返回API UI界面，非常的漂亮。</p>
<h2 id="u5173_u4E8E_u5751"><a href="#u5173_u4E8E_u5751" class="headerlink" title="关于坑"></a>关于坑</h2><h3 id="u57511"><a href="#u57511" class="headerlink" title="坑1"></a>坑1</h3><p>API返回的结果是json格式，因此，需要json格式转换包<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">compile</span><span class="params">(<span class="string">'org.codehaus.jackson:jackson-jaxrs:1.5.4'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">compile</span><span class="params">(<span class="string">'org.codehaus.jackson:jackson-mapper-asl:1.9.13'</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">compile</span><span class="params">(<span class="string">'org.codehaus.jackson:jackson-core-asl:1.9.13'</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<h3 id="u57512"><a href="#u57512" class="headerlink" title="坑2"></a>坑2</h3><p>API反序列化对象是，必须设置getter/setter<br>如果model不设置getter/setter，会返回序列化异常</p>
<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p> <a href="https://github.com/njkfei/springboot-api-docs" target="_blank" rel="external">https://github.com/njkfei/springboot-api-docs</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="springboot_api_u6587_u6863_u5728_u7EBF_u751F_u6210demo"><a href="#springboot_api_u6587_u6863_u5728_u7EBF_u751F_u6210demo" class="hea]]>
    </summary>
    
      <category term="java" scheme="http://wiki.niejinkun.com/tags/java/"/>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="设计" scheme="http://wiki.niejinkun.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java开启远程监控]]></title>
    <link href="http://wiki.niejinkun.com/2016/08/23/java%E2%94%90%D0%BA%E2%95%9E%D0%87%E2%95%98%E2%95%A2%E2%94%82%E2%95%A0%E2%95%9D%D1%80%E2%94%90%E2%95%AA/"/>
    <id>http://wiki.niejinkun.com/2016/08/23/java┐к╞Ї╘╢│╠╝р┐╪/</id>
    <published>2016-08-23T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.558Z</updated>
    <content type="html"><![CDATA[<p>线上运行的服务，如果没有监控，无异于盲人摸象。<br>裸奔的机器，根据墨菲定律，盲点必须出现问题。<br>所以，必须要上监控。</p>
<p>监控手段有两种：</p>
<ul>
<li>事前监控</li>
<li>事后监控<br>事后监控太晚啦，所以，监控应该在事前就去做。</li>
</ul>
<h2 id="u4E8B_u524D_u76D1_u63A7"><a href="#u4E8B_u524D_u76D1_u63A7" class="headerlink" title="事前监控"></a>事前监控</h2><p>事前监控的手段，有两个方面：</p>
<ul>
<li>业务监控</li>
<li>进程监控</li>
</ul>
<p>监控不能直接进入生产环境，因此，监控应该是远程监控，本机监控另说。</p>
<p>业务监控可以通过统一的日志平台进行管理。这个以后再讲<br>进程监控，有两种方法：</p>
<ul>
<li>rmx remote</li>
<li>jstatd<br>rmx remote需要在进程启动脚本中加入选项参数。需要编写启动脚本。<br>jstatd不需要修改启动脚本。直接在目标机启动jstatd后台进程即可。</li>
</ul>
<h3 id="rmx_remote_u914D_u7F6E"><a href="#rmx_remote_u914D_u7F6E" class="headerlink" title="rmx remote配置"></a>rmx remote配置</h3><p>如下所示：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAV<span class="built_in">A_OPTS</span>=<span class="string">"$&#123;JAVA_OPTS&#125; -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9123 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=true"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="jstatd_u914D_u7F6E"><a href="#jstatd_u914D_u7F6E" class="headerlink" title="jstatd配置"></a>jstatd配置</h3><h4 id="u5B89_u88C5jstatd"><a href="#u5B89_u88C5jstatd" class="headerlink" title="安装jstatd"></a>安装jstatd</h4><p>如果没有安装，那请自行安装吧。</p>
<h4 id="u7F16_u8F91_u914D_u7F6E_u6587_u4EF6"><a href="#u7F16_u8F91_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><p>需要配置安全权限<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi jstatd.policy </span><br><span class="line">grant codebase "file:../lib/tools.jar" &#123;</span><br><span class="line">    permission java.security.AllPermission<span class="comment">;</span></span><br><span class="line">&#125;<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="u542F_u52A8jstatd"><a href="#u542F_u52A8jstatd" class="headerlink" title="启动jstatd"></a>启动jstatd</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstatd -J-Djava<span class="class">.security</span><span class="class">.policy</span>=./jstatd.policy</span><br></pre></td></tr></table></figure>
<h4 id="u67E5_u770B_u7AEF_u53E3_u53F7_u662F_u5426_u542F_u52A8"><a href="#u67E5_u770B_u7AEF_u53E3_u53F7_u662F_u5426_u542F_u52A8" class="headerlink" title="查看端口号是否启动"></a>查看端口号是否启动</h4><p>jstatd进程1099是默认端口<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an <span class="string">| grep 1099</span></span><br></pre></td></tr></table></figure></p>
<h4 id="u8FDC_u7A0B_u8FD0_u884C"><a href="#u8FDC_u7A0B_u8FD0_u884C" class="headerlink" title="远程运行"></a>远程运行</h4><p> visualVM 打开连接端口，太爽啦！！！</p>
<h2 id="u9644_u52A0_u5B8C_u6574_u7684_u811A_u672C"><a href="#u9644_u52A0_u5B8C_u6574_u7684_u811A_u672C" class="headerlink" title="附加完整的脚本"></a>附加完整的脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/sh</span><br><span class="line"></span></span><br><span class="line">curdir=`dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$curdir</span></span><br><span class="line">curdir=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line">APP_NAME=teacherfeed-<span class="number">1.0</span>.jar</span><br><span class="line">MAIN_CLASS=org.springframework.boot.loader.JarLauncher</span><br><span class="line">APP_HOME=..</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> APP_HOME</span><br><span class="line"></span><br><span class="line">LIB_PATH=<span class="variable">$APP_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> LIB_PATH</span><br><span class="line"></span><br><span class="line"><span class="comment">#for i in $LIB_PATH/*</span></span><br><span class="line"><span class="comment">#       do CLASSPATH=$i:$CLASSPATH</span></span><br><span class="line"><span class="comment">#done</span></span><br><span class="line">CLASSPATH=<span class="variable">$LIB_PATH</span>/<span class="variable">$APP_NAME</span></span><br><span class="line"><span class="comment">#export CLASSPATH</span></span><br><span class="line"></span><br><span class="line">CLASSPATH=<span class="variable">$CLASSPATH</span>:<span class="variable">$APP_HOME</span>/conf:<span class="variable">$APP_HOME</span>/bin:<span class="variable">$APP_HOME</span></span><br><span class="line"></span><br><span class="line">JAVA_OPTS=<span class="string">"<span class="variable">$&#123;JAVA_OPTS&#125;</span> -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9123 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=true"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CLASSPATH</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$APP_HOME</span>/bin</span><br><span class="line"></span><br><span class="line">nohup java <span class="variable">$&#123;JAVA_OPTS&#125;</span> -classpath <span class="variable">$CLASSPATH</span> <span class="variable">$MAIN_CLASS</span> &amp;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>线上运行的服务，如果没有监控，无异于盲人摸象。<br>裸奔的机器，根据墨菲定律，盲点必须出现问题。<br>所以，必须要上监控。</p>
<p>监控手段有两种：</p>
<ul>
<li>事前监控</li>
<li>事后监控<br>事后监控太晚啦，所以，监控应该在事前就去做。]]>
    </summary>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="设计" scheme="http://wiki.niejinkun.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RMI VS Restful API]]></title>
    <link href="http://wiki.niejinkun.com/2016/08/23/rmi_vs_restfulapi/"/>
    <id>http://wiki.niejinkun.com/2016/08/23/rmi_vs_restfulapi/</id>
    <published>2016-08-23T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h2><h3 id="u4F18_u70B9"><a href="#u4F18_u70B9" class="headerlink" title="优点"></a>优点</h3><ul>
<li>性能高</li>
<li>基于TCP</li>
<li>开发方便，可通过spring集成，对业务代码无入侵</li>
</ul>
<h3 id="u7F3A_u70B9"><a href="#u7F3A_u70B9" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>只支持JAVA，不能跨语言</li>
<li>适合在内网访问，做为内部服务</li>
<li>做分布式</li>
</ul>
<h2 id="Restful_API"><a href="#Restful_API" class="headerlink" title="Restful API"></a>Restful API</h2><h3 id="u4F18_u70B9-1"><a href="#u4F18_u70B9-1" class="headerlink" title="优点"></a>优点</h3><ul>
<li>基于HTTP,适合做开放API</li>
<li>易沟通，易交流</li>
<li>开发效率高</li>
</ul>
<h3 id="u7F3A_u70B9-1"><a href="#u7F3A_u70B9-1" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>性能稍差</li>
</ul>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><ul>
<li>RMI性能高，相对适合于内部服务</li>
<li>Restful API开放性强，特别适合做APP后端API</li>
<li>Restful API需要考虑安全，限流，幂等问题</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h2><h3 id="u4F18_u70B9"><a href="#u4F18_u70B9" class="headerlink" title=]]>
    </summary>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="设计" scheme="http://wiki.niejinkun.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JAVA架构最佳实践]]></title>
    <link href="http://wiki.niejinkun.com/2016/08/23/java%E2%95%9D%E2%96%84%E2%95%A3%E2%95%A3%E2%95%AB%D1%8E%E2%95%9D%E2%95%A4%E2%95%A9%E2%95%A1%E2%95%9D%E2%88%99/"/>
    <id>http://wiki.niejinkun.com/2016/08/23/java╝▄╣╣╫ю╝╤╩╡╝∙/</id>
    <published>2016-08-23T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.558Z</updated>
    <content type="html"><![CDATA[<h2 id="u4F9D_u8D56_u6846_u67B6"><a href="#u4F9D_u8D56_u6846_u67B6" class="headerlink" title="依赖框架"></a>依赖框架</h2><p> springboot 无脑上</p>
<h2 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h2><p> mybatis，可以满足个性化SQL,必须上</p>
<h3 id="u6CE8_u610F"><a href="#u6CE8_u610F" class="headerlink" title="注意"></a>注意</h3><ul>
<li>建议配置SQL日志输出</li>
</ul>
<h2 id="API_u81EA_u52A8_u7EF4_u62A4"><a href="#API_u81EA_u52A8_u7EF4_u62A4" class="headerlink" title="API自动维护"></a>API自动维护</h2><p>有两种方式维护API：</p>
<ul>
<li>WIKI</li>
<li>代码即文档，通过swagger,自动生成在线API文档。但要注意安全性问题，必须是授权的访问者可以看到API说明。</li>
</ul>
<p>swagger，你值得拥有</p>
<h3 id="u8D44_u6E90_u53C2_u8003"><a href="#u8D44_u6E90_u53C2_u8003" class="headerlink" title="资源参考"></a>资源参考</h3><ul>
<li><a href="http://swagger.io/" target="_blank" rel="external">http://swagger.io/</a></li>
</ul>
<h2 id="u6027_u80FD_u76D1_u63A7"><a href="#u6027_u80FD_u76D1_u63A7" class="headerlink" title="性能监控"></a>性能监控</h2><p>性能监控的指标有：</p>
<ul>
<li>响应时间</li>
<li>吞吐量</li>
<li>线程</li>
<li>GC：GC是JAVA后台服务的最大一关。</li>
</ul>
<p>性能监控有两种方式：</p>
<ul>
<li>本地监控</li>
<li>远程监控</li>
</ul>
<h3 id="u672C_u5730_u76D1_u63A7"><a href="#u672C_u5730_u76D1_u63A7" class="headerlink" title="本地监控"></a>本地监控</h3><p>在本地使用jstat命令进行监控。</p>
<ul>
<li>优点是即时使用。</li>
<li>缺点是如果监控的是线上环境，需要开发人员在线上机器进行操作，上线操作是大忌。常在河边走，难免会湿靯。</li>
</ul>
<h3 id="u8FDC_u7A0B_u76D1_u63A7"><a href="#u8FDC_u7A0B_u76D1_u63A7" class="headerlink" title="远程监控"></a>远程监控</h3><p>对于线上机器，可以考虑远程监控。<br>开启远程监控的思路很简单：</p>
<ul>
<li>目标机运行监控agent,如jstatd,rmx</li>
<li>通过visualVM或zabbix插件，远程查看目标机运行状态</li>
</ul>
<h3 id="u63A8_u8350_u5DE5_u5177"><a href="#u63A8_u8350_u5DE5_u5177" class="headerlink" title="推荐工具"></a>推荐工具</h3><ul>
<li>JMeter : 批量发送HTTP请求，可进行压力测试</li>
<li>apache ab: </li>
<li>jstatd: 后台监控进程</li>
<li>VisuamVM: 图形化的jstat</li>
<li>jstat: 命令行工具，最简单高效</li>
<li>jolokia： 通过WEB UI，即可查看JAVA进程的环境变量，URL映射，配置参数，BEAN列表等，相当强大</li>
<li>zabbix集成的java监控插件</li>
</ul>
<h2 id="u63A8_u8350_u63D2_u4EF6"><a href="#u63A8_u8350_u63D2_u4EF6" class="headerlink" title="推荐插件"></a>推荐插件</h2><ul>
<li>mvn helper</li>
<li>lombok</li>
<li>GsonFormat</li>
</ul>
<h3 id="u4F9D_u8D56_u5173_u7CFB_u68C0_u67E5"><a href="#u4F9D_u8D56_u5173_u7CFB_u68C0_u67E5" class="headerlink" title="依赖关系检查"></a>依赖关系检查</h3><p>mvn helper可以通过UI的方式，展现依赖之间的关系。<br>对于排队依赖错误很有帮助。</p>
<h3 id="u7B80_u5316_u4EE3_u7801"><a href="#u7B80_u5316_u4EE3_u7801" class="headerlink" title="简化代码"></a>简化代码</h3><p>实体类有大量的getter/setter，通过lombok插件，可大量简化代码。</p>
<h3 id="JSON_to_Bean_Class"><a href="#JSON_to_Bean_Class" class="headerlink" title="JSON to Bean Class"></a>JSON to Bean Class</h3><p>通过GsonFormat插件，可以将josn格式的文件，转化为类。从而简化代码的编写。</p>
<h2 id="u65E5_u5FD7"><a href="#u65E5_u5FD7" class="headerlink" title="日志"></a>日志</h2><p>日志，和代码一样重要。在上线运行之后，日志比代码更重要。</p>
<h3 id="u63A8_u8350"><a href="#u63A8_u8350" class="headerlink" title="推荐"></a>推荐</h3><p>log4j2,logback.<br>log4j在大量写日志时会阻塞，导致出现性能问题。<br>因此，推荐log4j2和logback.</p>
<h3 id="u76D1_u63A7"><a href="#u76D1_u63A7" class="headerlink" title="监控"></a>监控</h3><p>建议日志监控，使用集中式日志监控平台，典型的如ELK.</p>
<h2 id="u8C03_u7528_u94FE_u5206_u6790"><a href="#u8C03_u7528_u94FE_u5206_u6790" class="headerlink" title="调用链分析"></a>调用链分析</h2><p>调用链分析很难做，但分布式系统，如果出现了异常，肯定需要通过分析调用链来排查问题。一个小技巧是在调用链中传递惟一的上下文。</p>
<h2 id="CI/CD"><a href="#CI/CD" class="headerlink" title="CI/CD"></a>CI/CD</h2><p>持续集成，持续部署</p>
<h2 id="u9759_u6001_u68C0_u67E5"><a href="#u9759_u6001_u68C0_u67E5" class="headerlink" title="静态检查"></a>静态检查</h2><ul>
<li>findbugs</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u4F9D_u8D56_u6846_u67B6"><a href="#u4F9D_u8D56_u6846_u67B6" class="headerlink" title="依赖框架"></a>依赖框架</h2><p> springboot 无脑上</p>
<h2 ]]>
    </summary>
    
      <category term="架构" scheme="http://wiki.niejinkun.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="设计" scheme="http://wiki.niejinkun.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[solr vs es 性能比较]]></title>
    <link href="http://wiki.niejinkun.com/2016/06/11/solr%20vs%20es/"/>
    <id>http://wiki.niejinkun.com/2016/06/11/solr vs es/</id>
    <published>2016-06-11T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h3 id="u5173_u952E_u7ED3_u8BBA"><a href="#u5173_u952E_u7ED3_u8BBA" class="headerlink" title="关键结论"></a>关键结论</h3><ul>
<li>两者性能相当</li>
<li>es查询性能稍差</li>
<li>es更友好</li>
<li>如果对性能有要求，建议2者都使用</li>
</ul>
<p><a href="https://sematext.com/blog/2015/01/30/solr-elasticsearch-comparison/" target="_blank" rel="external">https://sematext.com/blog/2015/01/30/solr-elasticsearch-comparison/</a><br><a href="http://www.slideshare.net/charliejuggler/lucene-solrlondonug-meetup28nov2014-solr-es-performance" target="_blank" rel="external">http://www.slideshare.net/charliejuggler/lucene-solrlondonug-meetup28nov2014-solr-es-performance</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5173_u952E_u7ED3_u8BBA"><a href="#u5173_u952E_u7ED3_u8BBA" class="headerlink" title="关键结论"></a>关键结论</h3><ul>
<li>两者性能相当</li>
<li>es]]>
    </summary>
    
      <category term="es" scheme="http://wiki.niejinkun.com/tags/es/"/>
    
      <category term="solr" scheme="http://wiki.niejinkun.com/tags/solr/"/>
    
      <category term="搜索" scheme="http://wiki.niejinkun.com/categories/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[zuul]]></title>
    <link href="http://wiki.niejinkun.com/2016/06/06/zuul%E2%95%9D%D0%84%E2%95%9C%D1%89/"/>
    <id>http://wiki.niejinkun.com/2016/06/06/zuul╝Є╜щ/</id>
    <published>2016-06-06T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h3 id="u4E3A_u4EC0_u4E48_u4F7F_u7528zuul"><a href="#u4E3A_u4EC0_u4E48_u4F7F_u7528zuul" class="headerlink" title="为什么使用zuul"></a>为什么使用zuul</h3><p>Zuul提供了一个框架，可以对过滤器进行动态的加载，编译，运行。过滤器之间没有直接的相互通信。他们是通过一个RequestContext的静态类来进行数据传递的。RequestContext类中有ThreadLocal变量来记录每个Request所需要传递的数据。<br>过滤器是由Groovy写成。这些过滤器文件被放在Zuul Server上的特定目录下面。Zuul会定期轮询这些目录。修改过的过滤器会动态的加载到Zuul Server中以便于request使用。<br>下面有几种标准的过滤器类型：</p>
<ul>
<li>PRE：这种过滤器在请求到达Origin Server之前调用。比如身份验证，在集群中选择请求的Origin Server，记log等。</li>
<li>ROUTING：在这种过滤器中把用户请求发送给Origin Server。发送给Origin Server的用户请求在这类过滤器中build。并使用Apache HttpClient或者Netfilx Ribbon发送给Origin Server。</li>
<li>POST：这种过滤器在用户请求从Origin Server返回以后执行。比如在返回的response上面加response header，做各种统计等。并在该过滤器中把response返回给客户。</li>
<li>ERROR：在其他阶段发生错误时执行该过滤器。</li>
<li>客户定制：比如我们可以定制一种STATIC类型的过滤器，用来模拟生成返回给客户的response。</li>
</ul>
<p>Zuul可以通过加载动态过滤机制，从而实现以下各项功能：</p>
<ul>
<li>动态路由</li>
<li>压力测试</li>
<li>过载保护</li>
<li>认证和安全</li>
<li>审查与监控</li>
</ul>
<p>个人感觉，zuul有点类似于nginx，可以干反向代理的活。据说性能上和nginx差不多。</p>
<h3 id="Why_did_we_build_Zuul_3F"><a href="#Why_did_we_build_Zuul_3F" class="headerlink" title="Why did we build Zuul?"></a>Why did we build Zuul?</h3><p>The volume and diversity of Netflix API traffic sometimes results in production issues arising quickly and without warning. We need a system that allows us to rapidly change behavior in order to react to these situations.</p>
<p>Zuul uses a range of different types of filters that enables us to quickly and nimbly apply functionality to our edge service. These filters help us perform the following functions:</p>
<p>Authentication and Security - identifying authentication requirements for each resource and rejecting requests that do not satisfy them.</p>
<p>Insights and Monitoring - tracking meaningful data and statistics at the edge in order to give us an accurate view of production.</p>
<p>Dynamic Routing - dynamically routing requests to different backend clusters as needed.</p>
<p>Stress Testing - gradually increasing the traffic to a cluster in order to gauge performance.</p>
<p>Load Shedding - allocating capacity for each type of request and dropping requests that go over the limit.</p>
<p>Static Response handling - building some responses directly at the edge instead of forwarding them to an internal cluster</p>
<p>Multiregion Resiliency - routing requests across AWS regions in order to diversify our ELB usage and move our edge closer to our members</p>
<p>For more details: How We Use Zuul At Netflix</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u4E3A_u4EC0_u4E48_u4F7F_u7528zuul"><a href="#u4E3A_u4EC0_u4E48_u4F7F_u7528zuul" class="headerlink" title="为什么使用zuul"></a>为什么使用zuul</]]>
    </summary>
    
      <category term="api" scheme="http://wiki.niejinkun.com/tags/api/"/>
    
      <category term="api" scheme="http://wiki.niejinkun.com/categories/api/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[protocol buf netty 集成]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/30/protobuf-hello/"/>
    <id>http://wiki.niejinkun.com/2016/05/30/protobuf-hello/</id>
    <published>2016-05-30T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<p> netty是高性能的异步io框架，阿里的dubbo,58系的scf和微博的motan的通信框架，都是选用了netty。<br> protoc buf是高性能的序列化方案。 因此，把他们集成在一起，非常地有必要了。<br> 通过netty，可以非常方便的构建高性能的后台服务。</p>
<p>本demo分别来源于netty和pb的官方手册，目前集成的比较乱，以后应该会重新整理。</p>
<h2 id="u4F9D_u8D56"><a href="#u4F9D_u8D56" class="headerlink" title="依赖"></a>依赖</h2><p>maven依赖<br>    <dependencies><br>        <dependency><br>            <groupid>io.netty</groupid><br>            <artifactid>netty-all</artifactid><br>            <version>4.0.23.Final</version><br>        </dependency><br>        <dependency><br>            <groupid>com.google.protobuf</groupid><br>            <artifactid>protobuf-java</artifactid><br>            <version>2.5.0</version><br>        </dependency><br>    </dependencies></p>
<h2 id="u4EE3_u7801"><a href="#u4EE3_u7801" class="headerlink" title="代码"></a>代码</h2><h3 id="pb_server"><a href="#pb_server" class="headerlink" title="pb server"></a>pb server</h3><p>提供初始化功能<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubReqServer</span> </span>&#123; </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bind</span><span class="params">(<span class="keyword">int</span> port)</span> <span class="keyword">throws</span> Exception</span>&#123; </span><br><span class="line">         <span class="comment">// 创建两个线程组，一个用于服务器接收客户端连接，一个用于进行socketchannel的网络读写 </span></span><br><span class="line">         EventLoopGroup bossGroup = <span class="keyword">new</span> NioEventLoopGroup(); </span><br><span class="line">         EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup(); </span><br><span class="line">  </span><br><span class="line">         <span class="keyword">try</span>&#123; </span><br><span class="line">             ServerBootstrap sb = <span class="keyword">new</span> ServerBootstrap(); </span><br><span class="line">             sb.group(bossGroup,workerGroup) </span><br><span class="line">                     .channel(NioServerSocketChannel.class) </span><br><span class="line">                     .option(ChannelOption.SO_BACKLOG,<span class="number">1024</span>) </span><br><span class="line">                     .childHandler(<span class="keyword">new</span> ChildChannelHandler()); </span><br><span class="line">  </span><br><span class="line">             ChannelFuture f = sb.bind(port).sync(); </span><br><span class="line">  </span><br><span class="line">             f.channel().closeFuture().sync(); </span><br><span class="line">         &#125;<span class="keyword">finally</span> &#123; </span><br><span class="line">             bossGroup.shutdownGracefully(); </span><br><span class="line">             workerGroup.shutdownGracefully(); </span><br><span class="line">         &#125; </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ChildChannelHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInitializer</span>&lt;<span class="title">SocketChannel</span>&gt;</span>&#123; </span><br><span class="line">  </span><br><span class="line">         <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel socketChannel)</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufVarint32FrameDecoder()); </span><br><span class="line">             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufDecoder(SubscribeReqProto.SubscribeReq.getDefaultInstance())); </span><br><span class="line">             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufVarint32LengthFieldPrepender()); </span><br><span class="line">             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufEncoder()); </span><br><span class="line">             socketChannel.pipeline().addLast(<span class="keyword">new</span> SubReqServerHandler()); </span><br><span class="line">  </span><br><span class="line">         &#125; </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">         <span class="keyword">int</span> port = <span class="number">9999</span>; </span><br><span class="line">  </span><br><span class="line">         <span class="keyword">new</span> SubReqServer().bind(port); </span><br><span class="line">     &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="pb_server_handle"><a href="#pb_server_handle" class="headerlink" title="pb server handle"></a>pb server handle</h3><p>执行解码，业务逻辑功能。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@ChannelHandler</span>.Sharable </span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubReqServerHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123; </span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">int</span> count; </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> </span>&#123; <span class="comment">// (2) </span></span><br><span class="line">  </span><br><span class="line">         SubscribeReqProto.SubscribeReq req = (SubscribeReqProto.SubscribeReq)msg; </span><br><span class="line">  </span><br><span class="line">         <span class="keyword">if</span>(req.getUserName().equalsIgnoreCase(<span class="string">"njp"</span>))&#123; </span><br><span class="line">             System.out.println(<span class="string">"service accept client subscribe req : ["</span> + req.toString() + <span class="string">"]"</span>); </span><br><span class="line">             ctx.writeAndFlush(resp(req.getSubReqID())); </span><br><span class="line">         &#125; </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelReadComplete</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">         ctx.flush(); </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">         ctx.close(); </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="keyword">private</span> SubscribeRespProto.<span class="function">SubscribeResp <span class="title">resp</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123; </span><br><span class="line">         <span class="keyword">return</span>  SubscribeRespProto.SubscribeResp.newBuilder().setSubReqID(id) </span><br><span class="line">                 .setRespCode(<span class="number">0</span>) </span><br><span class="line">                 .setDesc(<span class="string">"netty book order succeed, 3 days later ,sent to the designated address;"</span>) </span><br><span class="line">                 .build(); </span><br><span class="line">     &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="pb_client"><a href="#pb_client" class="headerlink" title="pb client"></a>pb client</h3><p>提供客户端初始化功能<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SubReqClient</span> &#123; </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connect</span>(<span class="params"><span class="keyword">int</span> port,String host</span>) throws InterruptedException </span>&#123; </span><br><span class="line">  </span><br><span class="line">         EventLoopGroup <span class="keyword">group</span> = <span class="keyword">new</span> NioEventLoopGroup(); </span><br><span class="line">  </span><br><span class="line">         Bootstrap sb = <span class="keyword">new</span> Bootstrap(); </span><br><span class="line">         <span class="keyword">try</span> &#123; </span><br><span class="line">             sb.<span class="keyword">group</span>(<span class="keyword">group</span>) </span><br><span class="line">                     .channel(NioSocketChannel.class) </span><br><span class="line">                     .handler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123; </span><br><span class="line">                         <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span>(<span class="params">SocketChannel socketChannel</span>) throws Exception </span>&#123; </span><br><span class="line">                             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufVarint32FrameDecoder()); </span><br><span class="line">                             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufDecoder(SubscribeRespProto.SubscribeResp.getDefaultInstance())); </span><br><span class="line">                             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufVarint32LengthFieldPrepender()); </span><br><span class="line">                             socketChannel.pipeline().addLast(<span class="keyword">new</span> ProtobufEncoder()); </span><br><span class="line">                             socketChannel.pipeline().addLast(<span class="keyword">new</span> SubReqClientHandler()); </span><br><span class="line">                         &#125; </span><br><span class="line">                     &#125;); </span><br><span class="line">             ChannelFuture f = sb.connect(host,port).sync(); </span><br><span class="line">  </span><br><span class="line">             f.channel().closeFuture().sync(); </span><br><span class="line">         &#125;<span class="keyword">finally</span> &#123; </span><br><span class="line">             <span class="keyword">group</span>.shutdownGracefully(); </span><br><span class="line">         &#125; </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span>&#123; </span><br><span class="line">         <span class="keyword">try</span> &#123; </span><br><span class="line">             <span class="keyword">new</span> SubReqClient().connect(<span class="number">9999</span>,<span class="string">"127.0.0.1"</span>); </span><br><span class="line">         &#125; <span class="keyword">catch</span> (InterruptedException e) &#123; </span><br><span class="line">             e.printStackTrace(); </span><br><span class="line">         &#125; </span><br><span class="line">     &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="pb_client_handle"><a href="#pb_client_handle" class="headerlink" title="pb client handle"></a>pb client handle</h3><p>执行pb编解码，业务逻辑功能。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubReqClientHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span></span>&#123; </span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">final</span> String ECHO_REQ = <span class="string">"hi njp, welcome to netty. $_"</span>; </span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">int</span> count; </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">SubReqClientHandler</span><span class="params">()</span></span>&#123; </span><br><span class="line">  </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="annotation">@Override</span> </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelActive</span><span class="params">(ChannelHandlerContext ctx)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) </span><br><span class="line">            ctx.writeAndFlush(subReq(i)); </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line"> <span class="comment">/*    public void handlerAdded(ChannelHandlerContext channelHandlerContext) throws Exception &#123; </span><br><span class="line">         channelHandlerContext.writeAndFlush(firstMessage); </span><br><span class="line">     &#125;*/</span> </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> </span>&#123; <span class="comment">// (2) </span></span><br><span class="line">  </span><br><span class="line">         System.out.println(<span class="string">"this is  : "</span> + ++count  + <span class="string">" times receive server: [ "</span>+ msg + </span><br><span class="line">                 <span class="string">" ]"</span>); </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext channelHandlerContext, Throwable throwable)</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">         channelHandlerContext.close(); </span><br><span class="line">     &#125; </span><br><span class="line">  </span><br><span class="line">     <span class="keyword">private</span> SubscribeReqProto.<span class="function">SubscribeReq <span class="title">subReq</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123; </span><br><span class="line">         List&lt;String&gt; address = <span class="keyword">new</span> ArrayList&lt;String&gt;(); </span><br><span class="line">         address.add(<span class="string">"beijing njp"</span>); </span><br><span class="line">         address.add(<span class="string">"shanghai njp"</span>); </span><br><span class="line">         <span class="keyword">return</span> </span><br><span class="line">                 SubscribeReqProto.SubscribeReq.newBuilder() </span><br><span class="line">                 .setSubReqID(id) </span><br><span class="line">                 .addAllAddress(address) </span><br><span class="line">                 .setProductName(<span class="string">"netty in action"</span>) </span><br><span class="line">                 .setUserName(<span class="string">"njp"</span>) </span><br><span class="line">                 .build(); </span><br><span class="line">     &#125; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p> <a href="https://github.com/njkfei/netty-pb-demo" target="_blank" rel="external">https://github.com/njkfei/netty-pb-demo</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> netty是高性能的异步io框架，阿里的dubbo,58系的scf和微博的motan的通信框架，都是选用了netty。<br> protoc buf是高性能的序列化方案。 因此，把他们集成在一起，非常地有必要了。<br> 通过netty，可以非常方便的构建高性能的后台服务]]>
    </summary>
    
      <category term="java" scheme="http://wiki.niejinkun.com/tags/java/"/>
    
      <category term="netty" scheme="http://wiki.niejinkun.com/tags/netty/"/>
    
      <category term="pb" scheme="http://wiki.niejinkun.com/tags/pb/"/>
    
      <category term="protocal" scheme="http://wiki.niejinkun.com/categories/protocal/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[springboot集成ssl tomcat]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/18/springboot%E2%95%9D%D0%BF%E2%94%82%E2%95%94tomcat%20ssl/"/>
    <id>http://wiki.niejinkun.com/2016/05/18/springboot╝п│╔tomcat ssl/</id>
    <published>2016-05-18T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="u8BC1_u4E66_u5236_u4F5C"><a href="#u8BC1_u4E66_u5236_u4F5C" class="headerlink" title="证书制作"></a>证书制作</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="label"> C:</span>\Users\njp\sanhao\workspace-netty&gt;keytool -genkey -alias server -keyalg RSA -k</span><br><span class="line">eystore server.jks -validity <span class="number">3650</span></span><br><span class="line">输入密钥库口令:</span><br><span class="line">密钥库口令太短 - 至少必须为 <span class="number">6</span> 个字符</span><br><span class="line">输入密钥库口令:</span><br><span class="line">再次输入新口令:</span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [Unknown]:  nie</span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [Unknown]:  sanhao</span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [Unknown]:  sanhao</span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [Unknown]:  beijing</span><br><span class="line">您所在的省<span class="regexp">/市/</span>自治区名称是什么?</span><br><span class="line">  [Unknown]:  beijing</span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [Unknown]:  cn</span><br><span class="line">CN=nie, OU=sanhao, O=sanhao, L=beijing, ST=beijing, C=cn是否正确?</span><br><span class="line">  [否]:  yes</span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [nie]:  niejinping</span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [sanhao]:</span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [sanhao]:</span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [beijing]:</span><br><span class="line">您所在的省<span class="regexp">/市/</span>自治区名称是什么?</span><br><span class="line">  [beijing]:</span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [cn]:</span><br><span class="line">CN=niejinping, OU=sanhao, O=sanhao, L=beijing, ST=beijing, C=cn是否正确?</span><br><span class="line">  [否]:</span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [niejinping]:</span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [sanhao]:</span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [sanhao]:</span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [beijing]:</span><br><span class="line">您所在的省<span class="regexp">/市/</span>自治区名称是什么?</span><br><span class="line">  [beijing]:</span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [cn]:</span><br><span class="line">CN=niejinping, OU=sanhao, O=sanhao, L=beijing, ST=beijing, C=cn是否正确?</span><br><span class="line">  [否]:  y</span><br><span class="line"></span><br><span class="line">输入 &lt;server&gt; 的密钥口令</span><br><span class="line">        (如果和密钥库口令相同, 按回车):</span><br></pre></td></tr></table></figure>
<h2 id="u4E70_u8BC1_u4E66"><a href="#u4E70_u8BC1_u4E66" class="headerlink" title="买证书"></a>买证书</h2><p>上<a href="/startssl.com">startssl.com</a>,免费的。但格式是P12格式的，需要转换为jks格式。方法如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;keytool -importkeysto</span><br><span class="line">re -srckeystore <span class="string">"niejinping2014%40gmail.com.p12"</span> -srcstoretype pkcs12 -destkeyst</span><br><span class="line">ore startssl.jks</span><br><span class="line">输入目标密钥库口令:</span><br><span class="line">再次输入新口令:</span><br><span class="line">输入源密钥库口令:</span><br><span class="line">已成功导入别名 <span class="number">1</span> 的条目。</span><br><span class="line">已完成导入命令: <span class="number">1</span> 个条目成功导入, <span class="number">0</span> 个条目失败或取消</span><br></pre></td></tr></table></figure></p>
<h2 id="APP_u4EE3_u7801"><a href="#APP_u4EE3_u7801" class="headerlink" title="APP代码"></a>APP代码</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@SpringBootApplication</span></span><br><span class="line"><span class="annotation">@EnableAutoConfiguration</span>(exclude = &#123;DataSourceAutoConfiguration.<span class="keyword">class</span>, HibernateJpaAutoConfiguration.<span class="keyword">class</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="typename">void</span> main(String[] args) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        SpringApplication.run(App.<span class="keyword">class</span>, args);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>上面的exclude必须写上，要不然加报无法连接数据源的错误。</p>
<h2 id="WEB_u4EE3_u7801"><a href="#WEB_u4EE3_u7801" class="headerlink" title="WEB代码"></a>WEB代码</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.springframework</span><span class="class">.stereotype</span><span class="class">.Controller</span>;</span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.springframework</span><span class="class">.web</span><span class="class">.bind</span><span class="class">.annotation</span><span class="class">.RequestMapping</span>;</span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.springframework</span><span class="class">.web</span><span class="class">.bind</span><span class="class">.annotation</span><span class="class">.ResponseBody</span>;</span><br><span class="line"></span><br><span class="line"><span class="at_rule">@<span class="keyword">Controller</span></span><br><span class="line">public class SslController </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="at_rule">@<span class="keyword">RequestMapping("/")</span></span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String <span class="function">helloWorld</span>() </span>&#123;</span><br><span class="line">        <span class="tag">return</span> "<span class="tag">Hello</span>, <span class="tag">world</span>";</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>很简单，是吧。</p>
<h2 id="u6D4B_u8BD5"><a href="#u6D4B_u8BD5" class="headerlink" title="测试"></a>测试</h2><p>在浏览器中输入：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https:</span><span class="comment">//localhost:8443</span></span><br></pre></td></tr></table></figure></p>
<p>这时浏览器会报警告，类似于12306的场景，继续前往即可。</p>
<p>测试OK.</p>
<h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p>  <a href="https://github.com/njkfei/springboot-ssl-tomcat" target="_blank" rel="external">https://github.com/njkfei/springboot-ssl-tomcat</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u8BC1_u4E66_u5236_u4F5C"><a href="#u8BC1_u4E66_u5236_u4F5C" class="headerlink" title="证书制作"></a>证书制作</h2><figure class="highlight gr]]>
    </summary>
    
      <category term="https" scheme="http://wiki.niejinkun.com/tags/https/"/>
    
      <category term="java" scheme="http://wiki.niejinkun.com/tags/java/"/>
    
      <category term="springboot" scheme="http://wiki.niejinkun.com/tags/springboot/"/>
    
      <category term="ssl" scheme="http://wiki.niejinkun.com/tags/ssl/"/>
    
      <category term="tomcat" scheme="http://wiki.niejinkun.com/tags/tomcat/"/>
    
      <category term="java" scheme="http://wiki.niejinkun.com/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[opencv java����ʹ�ü���]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/11/opencv/"/>
    <id>http://wiki.niejinkun.com/2016/05/11/opencv/</id>
    <published>2016-05-11T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<p>opcvͼ�������Ŀ�������������������ʶ���� �ü������ţ���ת�ȹ��ܡ�����opencv���Է����Ĺ�����˾�Լ���ͼƬ������<br>opcv�ǻ���C/C++���п����ģ���java����Ч�ʸߣ����ˣ����б��뽫���Ǽ��������������Լ���ͼƬ�������ܡ�</p>
<h2 id="uFFFD_uFFFD_uFFFD_uFFFD_u057B"><a href="#uFFFD_uFFFD_uFFFD_uFFFD_u057B" class="headerlink" title="����ջ"></a>����ջ</h2><ul>
<li>spring mvc : �ṩ���������Ľӿ�</li>
<li>opencv</li>
<li>opcv.jar: �ṩ��opcvn���Žӹ��ܡ�</li>
<li>build.gradle: ��������</li>
</ul>
<h2 id="uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD"><a href="#uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD" class="headerlink" title="��������"></a>��������</h2><p> idea</p>
<h2 id="uFFFD_uFFFD_u05F0opcv_javasdk"><a href="#uFFFD_uFFFD_u05F0opcv_javasdk" class="headerlink" title="��װopcv javasdk"></a>��װopcv javasdk</h2><p>   �ڹ���<a href="http://opencv.org/" target="_blank" rel="external">http://opencv.org/</a>���ذ�װ����<br>   ���簲װ��’C:/SOFTWARE/opencv��Ŀ¼�¡�</p>
<h2 id="uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD-1"><a href="#uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD_uFFFD-1" class="headerlink" title="��������"></a>��������</h2><p>   opcv java sdk����maven�����ֿ⣬��Ҫ���뱾������<br>   compile fileTree(include: [‘*.jar’], dir: ‘C:/SOFTWARE/opencv/build/java’)<br>��idea������������jar��</p>
<h2 id="uFFFD_uFFFD_uFFFD_u06BF_uFFFD"><a href="#uFFFD_uFFFD_uFFFD_u06BF_uFFFD" class="headerlink" title="���ڿ�"></a>���ڿ�</h2><p>   ��windows�����²���ͨ���������ɵ�JAVA�� ��centos����ִ�л������⣬��Ϊ�ײ����õĶ�̬���ǲ�һ���ġ���windows������opencv.dll,<br>   ��linux ������so,���ˣ�windows��������ͨ����java����linux���ܲ����ã���Ҫע�⡣</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>opcvͼ�������Ŀ�������������������ʶ���� �ü������ţ���ת�ȹ��ܡ�����opencv���Է����Ĺ�����˾�Լ���ͼƬ������<br>opcv�ǻ���C/C++���п����ģ���java����Ч�ʸߣ]]>
    </summary>
    
      <category term="java" scheme="http://wiki.niejinkun.com/tags/java/"/>
    
      <category term="opencv" scheme="http://wiki.niejinkun.com/tags/opencv/"/>
    
      <category term="opencv" scheme="http://wiki.niejinkun.com/categories/opencv/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[spring netty protolbuf集成]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/05/spring-netty-protobuffer%E2%95%9D%D0%BF%E2%94%82%E2%95%94/"/>
    <id>http://wiki.niejinkun.com/2016/05/05/spring-netty-protobuffer╝п│╔/</id>
    <published>2016-05-05T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="netty" scheme="http://wiki.niejinkun.com/tags/netty/"/>
    
      <category term="protolbuf" scheme="http://wiki.niejinkun.com/tags/protolbuf/"/>
    
      <category term="spring" scheme="http://wiki.niejinkun.com/tags/spring/"/>
    
      <category term="java" scheme="http://wiki.niejinkun.com/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于mqtt搭建im和推送系统]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/05/mqtt%E2%94%A4%D1%8E%E2%95%9C%D0%B8Im%E2%95%91%E2%95%90%E2%95%90%E2%95%9E%E2%95%A6%E2%95%90%E2%95%A7%E2%95%A1%E2%95%90%E2%94%82/"/>
    <id>http://wiki.niejinkun.com/2016/05/05/mqtt┤ю╜иIm║══╞╦═╧╡═│/</id>
    <published>2016-05-05T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="u95EE_u9898_u63D0_u51FA"><a href="#u95EE_u9898_u63D0_u51FA" class="headerlink" title="问题提出"></a>问题提出</h2><p>  我想搞类似于UBER或滴滴的APP应用,流程场景如下：</p>
<ul>
<li>乘客下单</li>
<li>系统就近找到候选司机，向司机进行推送</li>
<li>司机进行抢单（现在是派单了）</li>
<li>司机和乘客进行沟通</li>
</ul>
<h2 id="u95EE_u9898_u62BD_u8C61"><a href="#u95EE_u9898_u62BD_u8C61" class="headerlink" title="问题抽象"></a>问题抽象</h2><p>   基于上述的场景，抽象两个核心服务</p>
<ul>
<li>推送服务</li>
<li>IM服务<br>推送服务用于在用户下单后，后台将订单信息群发到司机端。<br>IM服务用于在司机端抢单成功后，乘客与司机之间就如何接机就行沟通</li>
</ul>
<h2 id="u89E3_u51B3_u65B9_u6848"><a href="#u89E3_u51B3_u65B9_u6848" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="u65B9_u6848_u4E00"><a href="#u65B9_u6848_u4E00" class="headerlink" title="方案一"></a>方案一</h3><p>  对于装机量小的app，可以考虑使用免费的BAIDU云推送等第三方推送系统。但是，第三方系统有明显的缺陷：</p>
<ul>
<li>限速</li>
<li>由于限速，会导致时延加大</li>
<li>即使不限速，时延也很大</li>
<li>到达率不高</li>
<li><p>实时性不高</p>
<h3 id="u65B9_u6848_u4E8C"><a href="#u65B9_u6848_u4E8C" class="headerlink" title="方案二"></a>方案二</h3><p>方案二采用定制加开发方案。<br>采用MQTT开源方案，结合业务需求进行订制。</p>
<p>方案二优点：</p>
</li>
<li>采用长连接代替轮询，减少网络流量，和XMPP相比，轻量非常多</li>
<li>数据传输可使用二进制数据，结合PB，易于扩展，不要太爽</li>
</ul>
<h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p>   会上传至GITHUB上去的。^_^.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u95EE_u9898_u63D0_u51FA"><a href="#u95EE_u9898_u63D0_u51FA" class="headerlink" title="问题提出"></a>问题提出</h2><p>  我想搞类似于UBER或滴滴的APP应用,流程]]>
    </summary>
    
      <category term="im" scheme="http://wiki.niejinkun.com/tags/im/"/>
    
      <category term="mqtt" scheme="http://wiki.niejinkun.com/tags/mqtt/"/>
    
      <category term="push" scheme="http://wiki.niejinkun.com/tags/push/"/>
    
      <category term="linux" scheme="http://wiki.niejinkun.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[图片服务]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/04/%E2%95%90%E2%95%9D%E2%95%9E%D0%BC%E2%95%96%E2%96%A0%E2%95%AC%D1%91%E2%94%90%D0%BA%E2%95%96%D0%B2/"/>
    <id>http://wiki.niejinkun.com/2016/05/04/═╝╞м╖■╬ё┐к╖в/</id>
    <published>2016-05-04T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<p>  图片服务是电商网站的基本服务。你打开XXX网站，进入列表页，看到的是商品的缩略图。<br>  进入详情页，还在大一点缩略图。你点击一下缩略图，完整的图片最终出来了。</p>
<p>  这里涉及几个方面：</p>
<ul>
<li>图片压缩</li>
<li>图片裁剪<br>这可以通过基本工具imagemagick完成。通过springboot封装，对外提供图片服务。</li>
</ul>
<h2 id="imagemaick_u5B89_u88C5"><a href="#imagemaick_u5B89_u88C5" class="headerlink" title="imagemaick安装"></a>imagemaick安装</h2><p> imagemaick是图片工具套装，提供了一系列图片工具。<br> centos下安装，如下所示。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> ImageMagick</span><br></pre></td></tr></table></figure></p>
<p>安装完成后，看看能不能用。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[XXXXX@iZ28h3eaiotZ ~]$ identify </span><br><span class="line">Version: ImageMagick <span class="number">6.7</span><span class="number">.2</span>-<span class="number">7</span> <span class="number">2015</span>-<span class="number">07</span>-<span class="number">23</span> Q16 http:<span class="comment">//www.imagemagick.org</span></span><br></pre></td></tr></table></figure></p>
<p>安装正常。</p>
<h3 id="u56FE_u7247_u5C5E_u6027_u67E5_u770B"><a href="#u56FE_u7247_u5C5E_u6027_u67E5_u770B" class="headerlink" title="图片属性查看"></a>图片属性查看</h3><p><code>identity</code>是检查图片规格命令。如下所示：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[XXX@iZ28h3eaiotZ imageprocess]$ identify <span class="number">109.</span>jpg </span><br><span class="line"><span class="number">109.</span>jpg JPEG <span class="number">1280</span>x720 <span class="number">1280</span>x720+<span class="number">0</span>+<span class="number">0</span> <span class="number">8</span>-bit DirectClass <span class="number">932</span>KB <span class="number">0.000u</span> <span class="number">0</span>:<span class="number">00.000</span></span><br></pre></td></tr></table></figure></p>
<p>如果想获取详情信息，则可使用如下的命令，</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[XXX@iZ28h3eaiotZ imageprocess]$ identify -verbose <span class="number">109.</span>jpg</span><br><span class="line">Image: <span class="number">109.</span>qua.jpg</span><br><span class="line">  Format: JPEG (Joint Photographic Experts Group JFIF format)</span><br><span class="line">  Class: DirectClass</span><br><span class="line">  Geometry: <span class="number">1280</span>x720+<span class="number">0</span>+<span class="number">0</span></span><br><span class="line">  Resolution: <span class="number">72</span>x72</span><br><span class="line">  Print size: <span class="number">17.7778</span>x10</span><br><span class="line">  Units: PixelsPerInch</span><br><span class="line">  Type: TrueColor</span><br><span class="line">  Endianess: Undefined</span><br><span class="line">  Colorspace: RGB</span><br><span class="line">  Depth: <span class="number">8</span>-bit</span><br><span class="line">  Channel depth:</span><br><span class="line">    red: <span class="number">8</span>-bit</span><br><span class="line">    green: <span class="number">8</span>-bit</span><br><span class="line">    blue: <span class="number">8</span>-bit</span><br><span class="line">  Channel statistics:</span><br><span class="line">    Red:</span><br><span class="line">      min: <span class="number">2</span> (<span class="number">0.00784314</span>)</span><br><span class="line">      max: <span class="number">255</span> (<span class="number">1</span>)</span><br><span class="line">      mean: <span class="number">115.585</span> (<span class="number">0.453275</span>)</span><br><span class="line">      standard deviation: <span class="number">73.6479</span> (<span class="number">0.288815</span>)</span><br><span class="line">      kurtosis: -<span class="number">1.39492</span></span><br><span class="line">      skewness: <span class="number">0.260383</span></span><br><span class="line">    Green:</span><br><span class="line">      min: <span class="number">0</span> (<span class="number">0</span>)</span><br><span class="line">      max: <span class="number">255</span> (<span class="number">1</span>)</span><br><span class="line">      mean: <span class="number">83.8793</span> (<span class="number">0.328938</span>)</span><br><span class="line">      standard deviation: <span class="number">73.3303</span> (<span class="number">0.28757</span>)</span><br><span class="line">      kurtosis: -<span class="number">1.03342</span></span><br><span class="line">      skewness: <span class="number">0.703249</span></span><br><span class="line">    Blue:</span><br><span class="line">      min: <span class="number">0</span> (<span class="number">0</span>)</span><br><span class="line">      max: <span class="number">255</span> (<span class="number">1</span>)</span><br><span class="line">      mean: <span class="number">85.1687</span> (<span class="number">0.333995</span>)</span><br><span class="line">      standard deviation: <span class="number">66.1706</span> (<span class="number">0.259493</span>)</span><br><span class="line">      kurtosis: -<span class="number">0.658683</span></span><br><span class="line">      skewness: <span class="number">0.836668</span></span><br><span class="line">  Image statistics:</span><br><span class="line">    Overall:</span><br><span class="line">      min: <span class="number">0</span> (<span class="number">0</span>)</span><br><span class="line">      max: <span class="number">255</span> (<span class="number">1</span>)</span><br><span class="line">      mean: <span class="number">94.8777</span> (<span class="number">0.372069</span>)</span><br><span class="line">      standard deviation: <span class="number">71.1334</span> (<span class="number">0.278955</span>)</span><br><span class="line">      kurtosis: -<span class="number">0.962282</span></span><br><span class="line">      skewness: <span class="number">0.613406</span></span><br><span class="line">  Rendering intent: Undefined</span><br><span class="line">  Interlace: None</span><br><span class="line">  Background color: white</span><br><span class="line">  Border color: rgb(<span class="number">223</span>,<span class="number">223</span>,<span class="number">223</span>)</span><br><span class="line">  Matte color: grey74</span><br><span class="line">  Transparent color: black</span><br><span class="line">  Compose: Over</span><br><span class="line">  Page geometry: <span class="number">1280</span>x720+<span class="number">0</span>+<span class="number">0</span></span><br><span class="line">  Dispose: Undefined</span><br><span class="line">  Iterations: <span class="number">0</span></span><br><span class="line">  Compression: JPEG</span><br><span class="line">  Quality: <span class="number">70</span></span><br><span class="line">  Orientation: Undefined</span><br><span class="line">  Properties:</span><br><span class="line">    comment: Lavc55<span class="number">.56</span><span class="number">.107</span></span><br><span class="line">    date:create: <span class="number">2016</span>-<span class="number">05</span>-<span class="number">05</span>T17:<span class="number">18</span>:<span class="number">48</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">    date:modify: <span class="number">2016</span>-<span class="number">05</span>-<span class="number">05</span>T17:<span class="number">18</span>:<span class="number">48</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">    jpeg:colorspace: <span class="number">2</span></span><br><span class="line">    jpeg:sampling-factor: <span class="number">2</span>x2,<span class="number">1</span>x1,<span class="number">1</span>x1</span><br><span class="line">    signature: ce1eb774989d8953cc1906cb7f1c0278b6741d47d26c6b42f9f341c25d1fc6a8</span><br><span class="line">  Artifacts:</span><br><span class="line">    verbose: <span class="literal">true</span></span><br><span class="line">  Tainted: False</span><br><span class="line">  Filesize: <span class="number">50.6</span>KBB</span><br><span class="line">  Number pixels: <span class="number">922</span>KB</span><br><span class="line">  Pixels per second: <span class="number">46.08</span>MB</span><br><span class="line">  User time: <span class="number">0.000u</span></span><br><span class="line">  Elapsed time: <span class="number">0</span>:<span class="number">01.019</span></span><br></pre></td></tr></table></figure>
<h3 id="u56FE_u7247_u88C1_u526A"><a href="#u56FE_u7247_u88C1_u526A" class="headerlink" title="图片裁剪"></a>图片裁剪</h3><p>用于剪裁图像的工具是convert。使用“-crop”选项后，convert命令会在输入图像中剪裁出一个矩形区域。<br>如下所示：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[xxx@iZ28h3eaiotZ imageprocess]$ convert <span class="number">109</span><span class="class">.jpg</span> -crop <span class="number">1280</span>x720+<span class="number">20</span>+<span class="number">10</span> <span class="number">109</span><span class="class">.crop</span><span class="class">.jpg</span> </span><br><span class="line">[xxx@iZ28h3eaiotZ imageprocess]$ ls</span><br><span class="line"><span class="number">109</span><span class="class">.crop</span><span class="class">.jpg</span>  <span class="number">109</span>.jpg</span><br></pre></td></tr></table></figure>
<h3 id="u56FE_u7247_u538B_u7F29"><a href="#u56FE_u7247_u538B_u7F29" class="headerlink" title="图片压缩"></a>图片压缩</h3><h4 id="u6309_u5927_u5C0F_u538B_u7F29"><a href="#u6309_u5927_u5C0F_u538B_u7F29" class="headerlink" title="按大小压缩"></a>按大小压缩</h4><p><code>-adaptive-resize</code>选项用于压缩图片，后面跟压缩后的分辩率。<br>如下所示 。将1280x720的图片压缩为640*480.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[xxx@iZ28h3eaiotZ imageprocess]$ convert <span class="number">109</span><span class="class">.jpg</span>  -adaptive-<span class="attribute">resize</span> <span class="number">640</span>x480 <span class="number">109</span><span class="class">.small</span><span class="class">.jpg</span></span><br><span class="line">[xxx@iZ28h3eaiotZ imageprocess]$ ls</span><br><span class="line"><span class="number">109</span><span class="class">.crop</span><span class="class">.jpg</span>  <span class="number">109</span><span class="class">.jpg</span>  <span class="number">109</span><span class="class">.small</span><span class="class">.jpg</span></span><br></pre></td></tr></table></figure>
<p>直接使用’-resize’选项也可以达到上述效果。</p>
<h4 id="u6309_u6BD4_u7387_u538B_u7F29"><a href="#u6309_u6BD4_u7387_u538B_u7F29" class="headerlink" title="按比率压缩"></a>按比率压缩</h4><p><code>-resize</code> 可以指定比率进行压缩，如下所示。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[xxx@iZ28h3eaiotZ imageprocess]$ convert <span class="number">109.</span>jpg  -resize <span class="number">50</span>%x50% <span class="number">109.</span>rate.jpg</span><br><span class="line">[xxx@iZ28h3eaiotZ imageprocess]$ ls -lsh</span><br><span class="line">total <span class="number">1.1</span>M</span><br><span class="line"> <span class="number">80</span>K -rw-rw-r-- <span class="number">1</span> xxxx xxxx  <span class="number">77</span>K May  <span class="number">5</span> <span class="number">11</span>:<span class="number">53</span> <span class="number">109.</span>crop.jpg</span><br><span class="line"><span class="number">912</span>K -rw-r--r-- <span class="number">1</span> xxxx xxxx <span class="number">911</span>K Apr <span class="number">21</span> <span class="number">10</span>:<span class="number">28</span> <span class="number">109.</span>jpg</span><br><span class="line"> <span class="number">32</span>K -rw-rw-r-- <span class="number">1</span> xxxx xxxx  <span class="number">29</span>K May  <span class="number">5</span> <span class="number">16</span>:<span class="number">18</span> <span class="number">109.</span>rate.jpg</span><br><span class="line"> <span class="number">32</span>K -rw-rw-r-- <span class="number">1</span> xxxx xxxx  <span class="number">29</span>K May  <span class="number">5</span> <span class="number">12</span>:<span class="number">00</span> <span class="number">109.</span>small.jpg</span><br></pre></td></tr></table></figure></p>
<p>如果需要设置图片质量，还可以继续压缩，如下所示。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[xxxx@iZ28h3eaiotZ imageprocess]$ convert <span class="number">109.</span>jpg  -resize <span class="number">50</span>%x50%  -quality <span class="number">50</span> <span class="number">109.</span>rate.jpg </span><br><span class="line">[xxxx@iZ28h3eaiotZ imageprocess]$ sz <span class="number">109.</span>rate.jpg </span><br><span class="line">rz</span><br><span class="line">Starting zmodem transfer.  Press Ctrl+C to cancel.</span><br><span class="line">Transferring <span class="number">109.</span>rate.jpg...</span><br><span class="line">  <span class="number">100</span>%      <span class="number">17</span> KB      <span class="number">17</span> KB/sec    <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span>       <span class="number">0</span> Errors  </span><br><span class="line"></span><br><span class="line">一般指定图片质量为<span class="number">70</span>到<span class="number">80</span>就行，一般看不出来。</span><br><span class="line"></span><br><span class="line">[xxxx@iZ28h3eaiotZ imageprocess]$ ls -lsh</span><br><span class="line">total <span class="number">1.1</span>M</span><br><span class="line"> <span class="number">80</span>K -rw-rw-r-- <span class="number">1</span> xxxx xxxx  <span class="number">77</span>K May  <span class="number">5</span> <span class="number">11</span>:<span class="number">53</span> <span class="number">109.</span>crop.jpg</span><br><span class="line"><span class="number">912</span>K -rw-r--r-- <span class="number">1</span> xxxx xxxx <span class="number">911</span>K Apr <span class="number">21</span> <span class="number">10</span>:<span class="number">28</span> <span class="number">109.</span>jpg</span><br><span class="line"> <span class="number">20</span>K -rw-rw-r-- <span class="number">1</span> xxxx xxxx  <span class="number">18</span>K May  <span class="number">5</span> <span class="number">16</span>:<span class="number">20</span> <span class="number">109.</span>rate.jpg</span><br><span class="line"> <span class="number">32</span>K -rw-rw-r-- <span class="number">1</span> xxxx xxxx  <span class="number">29</span>K May  <span class="number">5</span> <span class="number">12</span>:<span class="number">00</span> <span class="number">109.</span>small.jpg</span><br><span class="line">[xxxx@iZ28h3eaiotZ imageprocess]$</span><br></pre></td></tr></table></figure></p>
<h2 id="u4E0Espringboot_u96C6_u6210"><a href="#u4E0Espringboot_u96C6_u6210" class="headerlink" title="与springboot集成"></a>与springboot集成</h2><p>springboot提供服务，通过ImageMagick工具即可完成处理，处理完成后，将图片上传至阿里云OSS,最后更新数据库。<br>SO EASY.</p>
<h2 id="u4EE3_u7801_u89C1github"><a href="#u4EE3_u7801_u89C1github" class="headerlink" title="代码见github"></a>代码见github</h2><p>   (<a href="https://github.com/njkfei/imageprocess/)[https://github.com/njkfei/imageprocess/" target="_blank" rel="external">https://github.com/njkfei/imageprocess/)[https://github.com/njkfei/imageprocess/</a>]</p>
<h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><p>（<a href="http://www.imagemagick.com.cn/)[http://www.imagemagick.com.cn/" target="_blank" rel="external">http://www.imagemagick.com.cn/)[http://www.imagemagick.com.cn/</a>]</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>  图片服务是电商网站的基本服务。你打开XXX网站，进入列表页，看到的是商品的缩略图。<br>  进入详情页，还在大一点缩略图。你点击一下缩略图，完整的图片最终出来了。</p>
<p>  这里涉及几个方面：</p>
<ul>
<li>图片压缩</li>
<li>图片裁剪<b]]>
    </summary>
    
      <category term="ImageMagick" scheme="http://wiki.niejinkun.com/tags/ImageMagick/"/>
    
      <category term="image" scheme="http://wiki.niejinkun.com/tags/image/"/>
    
      <category term="java" scheme="http://wiki.niejinkun.com/tags/java/"/>
    
      <category term="liux" scheme="http://wiki.niejinkun.com/tags/liux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[yii2 ubuntu部署指南]]></title>
    <link href="http://wiki.niejinkun.com/2016/05/02/yii2%20ubuntu%E2%96%93%E2%94%90%E2%95%A9%D0%81%E2%95%93%E2%95%95%E2%94%80%E2%95%A7/"/>
    <id>http://wiki.niejinkun.com/2016/05/02/yii2 ubuntu▓┐╩Ё╓╕─╧/</id>
    <published>2016-05-02T16:00:00.000Z</published>
    <updated>2016-12-29T07:27:54.570Z</updated>
    <content type="html"><![CDATA[<h2 id="u57FA_u672C_u73AF_u5883_u5B89_u88C5"><a href="#u57FA_u672C_u73AF_u5883_u5B89_u88C5" class="headerlink" title="基本环境安装"></a>基本环境安装</h2><p>要求提前安装下述依赖环境</p>
<ul>
<li>apache</li>
<li>mysql</li>
<li>php<br>版本使用主流的即可。<br>假设已经安装上述环境</li>
</ul>
<h2 id="u7EA6_u675F"><a href="#u7EA6_u675F" class="headerlink" title="约束"></a>约束</h2><ul>
<li>数据库中数据已准备好</li>
</ul>
<h2 id="u7EBF_u4E0A_u90E8_u7F72_u5305"><a href="#u7EBF_u4E0A_u90E8_u7F72_u5305" class="headerlink" title="线上部署包"></a>线上部署包</h2><ul>
<li>下面假设部署包是yii2.zip</li>
<li>yii2的部署包为压缩包，解压安装到apache指定的工作目录即可</li>
<li>假设yii2.zip解压后放在了目录”~/www/yii2下面”</li>
<li>“~”在部署时，请使用绝对路径</li>
<li>后续的例子都是以此为说明的</li>
</ul>
<h2 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h2><h3 id="httpd-conf_u914D_u7F6E"><a href="#httpd-conf_u914D_u7F6E" class="headerlink" title="httpd.conf配置"></a>httpd.conf配置</h3><p>apache是yii2运行的容器环境，首先需要配置httpd.conf.<br>httpd.conf一般在目录“/etc/httpd/conf/httpd.conf”下面。</p>
<p>如下所示。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[niejinping<span class="annotation">@iZ</span>28h3eaiotZ ~]$ more <span class="regexp">/etc/</span>httpd<span class="regexp">/conf/</span>httpd.conf</span><br></pre></td></tr></table></figure></p>
<p>httpd.conf有如下项目需要配置</p>
<ul>
<li>rewrite规则重写</li>
<li>Web Root目录</li>
</ul>
<h4 id="rewrite_u89C4_u5219_u91CD_u5199"><a href="#rewrite_u89C4_u5219_u91CD_u5199" class="headerlink" title="rewrite规则重写"></a>rewrite规则重写</h4><p>找到下面一行。<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#LoadModule rewrite_module modules/mod_rewrite.so</span></span><br></pre></td></tr></table></figure></p>
<p>把注释去掉。</p>
<h4 id="Web_Root_u914D_u7F6E"><a href="#Web_Root_u914D_u7F6E" class="headerlink" title="Web Root配置"></a>Web Root配置</h4><p>默认的Web Root是：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword"><span class="common">DocumentRoot</span></span> <span class="string">"/var/www/html"</span></span><br></pre></td></tr></table></figure></p>
<p>把这行改为yii2的目录。即：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword"><span class="common">DocumentRoot</span></span> <span class="string">"~/www/yii2/web"</span></span><br></pre></td></tr></table></figure></p>
<p>修改权限设置。<br>把<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory <span class="string">"/var/www/html"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Possible values for the Options directive are "None", "All",</span></span><br><span class="line"><span class="preprocessor"># or any combination of:</span></span><br><span class="line"><span class="preprocessor">#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Note that "MultiViews" must be named *explicitly* --- "Options All"</span></span><br><span class="line"><span class="preprocessor"># doesn't give it to you.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># The Options directive is both complicated and important.  Please see</span></span><br><span class="line"><span class="preprocessor"># http://httpd.apache.org/docs/2.2/mod/core.html#options</span></span><br><span class="line"><span class="preprocessor"># for more information.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># AllowOverride controls what directives may be placed in .htaccess files.</span></span><br><span class="line"><span class="preprocessor"># It can be "All", "None", or any combination of the keywords:</span></span><br><span class="line"><span class="preprocessor">#   Options FileInfo AuthConfig Limit</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">    AllowOverride None</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Controls who can get stuff from this server.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">    Order Deny,Allow</span><br><span class="line">   Allow from all</span><br><span class="line"></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>
<p>修改为：<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory <span class="string">"~/www/yii2/web"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Possible values for the Options directive are "None", "All",</span></span><br><span class="line"><span class="preprocessor"># or any combination of:</span></span><br><span class="line"><span class="preprocessor">#   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Note that "MultiViews" must be named *explicitly* --- "Options All"</span></span><br><span class="line"><span class="preprocessor"># doesn't give it to you.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># The Options directive is both complicated and important.  Please see</span></span><br><span class="line"><span class="preprocessor"># http://httpd.apache.org/docs/2.2/mod/core.html#options</span></span><br><span class="line"><span class="preprocessor"># for more information.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">    Options Indexes FollowSymLinks</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># AllowOverride controls what directives may be placed in .htaccess files.</span></span><br><span class="line"><span class="preprocessor"># It can be "All", "None", or any combination of the keywords:</span></span><br><span class="line"><span class="preprocessor">#   Options FileInfo AuthConfig Limit</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">    AllowOverride None</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># Controls who can get stuff from this server.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line">    Order Deny,Allow</span><br><span class="line">   Allow from all</span><br><span class="line"></span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="db_u914D_u7F6E"><a href="#db_u914D_u7F6E" class="headerlink" title="db配置"></a>db配置</h3><p>在yii2/config/db.php里面，设置mysql连接参数<br>如：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'class'</span> =&gt; <span class="string">'yii\db\Connection'</span>,</span><br><span class="line">    <span class="string">'dsn'</span> =&gt; <span class="string">'mysql:host=localhost;dbname=yii2basic'</span>,</span><br><span class="line">    <span class="string">'username'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line">    <span class="string">'password'</span> =&gt; <span class="string">'rootroot'</span>,</span><br><span class="line">    <span class="string">'charset'</span> =&gt; <span class="string">'utf8'</span>,</span><br><span class="line">];</span></span><br></pre></td></tr></table></figure>
<p>请修改上述host,dbname,username,password为线上配置。<br>为了安全考虑，上述端口号不允许外网访问。</p>
<h3 id="redis_u914D_u7F6E"><a href="#redis_u914D_u7F6E" class="headerlink" title="redis配置"></a>redis配置</h3><p>在文件yii2/config/web.php中，增加redis配置。</p>
<h4 id="u4FEE_u6539Cache_u4E3ARedis"><a href="#u4FEE_u6539Cache_u4E3ARedis" class="headerlink" title="修改Cache为Redis"></a>修改Cache为Redis</h4><p>去掉FileCache,改用RedisCache,如下所示：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">'<span class="operator"><span class="keyword">cache</span><span class="string">' =&gt; [</span><br><span class="line">    // '</span><span class="keyword">class</span><span class="string">' =&gt; '</span>yii\<span class="keyword">caching</span>\FileCache<span class="string">',</span><br><span class="line">    '</span><span class="keyword">class</span><span class="string">' =&gt; '</span>yii\redis\<span class="keyword">Cache</span><span class="string">',</span><br><span class="line">],</span></span></span><br></pre></td></tr></table></figure></p>
<h4 id="u4FEE_u6539redis_u8FDE_u63A5"><a href="#u4FEE_u6539redis_u8FDE_u63A5" class="headerlink" title="修改redis连接"></a>修改redis连接</h4><p>同样的，在文件yii2/config/web.php中，增加redis配置。<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'redis'</span> =&gt; [</span><br><span class="line">    <span class="string">'class'</span> =&gt; <span class="string">'yii\redis\Connection'</span>,</span><br><span class="line">    <span class="string">'hostname'</span> =&gt; <span class="string">'localhost'</span>,</span><br><span class="line">    <span class="string">'port'</span> =&gt; <span class="number">6379</span>,</span><br><span class="line">    <span class="string">'database'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure></p>
<p>把上述的配置设置为线上配置即可,需要修改hostname,port.<br>为了安全考虑，上述端口号不允许外网访问。</p>
<p>至此，线上配置已完成。</p>
<h2 id="u91CD_u542Fapache_u670D_u52A1"><a href="#u91CD_u542Fapache_u670D_u52A1" class="headerlink" title="重启apache服务"></a>重启apache服务</h2><p> 线上配置完成后，重启apache服务即可。</p>
<h3 id="u91CD_u542Fapache_u670D_u52A1-1"><a href="#u91CD_u542Fapache_u670D_u52A1-1" class="headerlink" title="重启apache服务"></a>重启apache服务</h3> <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sudo</span> /etc/init.d/httpd restart</span><br></pre></td></tr></table></figure>
<h3 id="u68C0_u67E5_u670D_u52A1_u662F_u5426_u6210_u529F_u91CD_u542F"><a href="#u68C0_u67E5_u670D_u52A1_u662F_u5426_u6210_u529F_u91CD_u542F" class="headerlink" title="检查服务是否成功重启"></a>检查服务是否成功重启</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ps aux |grep httpd</span><br><span class="line">[niejinping@iZ28h3eaiotZ ~]$ ps aux | grep httpd</span><br><span class="line"><span class="number">500</span>       <span class="number">2702</span>  <span class="number">0.0</span>  <span class="number">0.0</span> <span class="number">103132</span>   <span class="number">852</span> pts/<span class="number">0</span>    S+   <span class="number">15</span>:<span class="number">07</span>   <span class="number">0</span>:<span class="number">00</span> more httpd.conf</span><br><span class="line"><span class="number">500</span>       <span class="number">2738</span>  <span class="number">0.0</span>  <span class="number">0.0</span> <span class="number">103308</span>   <span class="number">844</span> pts/<span class="number">1</span>    S+   <span class="number">15</span>:<span class="number">20</span>   <span class="number">0</span>:<span class="number">00</span> grep httpd</span><br><span class="line">apache   <span class="number">14556</span>  <span class="number">0.0</span>  <span class="number">1.6</span> <span class="number">561688</span> <span class="number">17044</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14557</span>  <span class="number">0.0</span>  <span class="number">1.6</span> <span class="number">561756</span> <span class="number">16844</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14558</span>  <span class="number">0.0</span>  <span class="number">1.6</span> <span class="number">561432</span> <span class="number">17112</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14559</span>  <span class="number">0.0</span>  <span class="number">1.6</span> <span class="number">561432</span> <span class="number">17224</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14560</span>  <span class="number">0.0</span>  <span class="number">1.8</span> <span class="number">562296</span> <span class="number">18948</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14561</span>  <span class="number">0.0</span>  <span class="number">1.4</span> <span class="number">561432</span> <span class="number">14552</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14562</span>  <span class="number">0.0</span>  <span class="number">1.6</span> <span class="number">561592</span> <span class="number">16536</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">apache   <span class="number">14563</span>  <span class="number">0.0</span>  <span class="number">1.4</span> <span class="number">561516</span> <span class="number">14852</span> ?        S    May01   <span class="number">0</span>:<span class="number">00</span> /usr/sbin/httpd</span><br><span class="line">root     <span class="number">17294</span>  <span class="number">0.0</span>  <span class="number">2.3</span> <span class="number">463612</span> <span class="number">23576</span> ?        Ss   Apr29   <span class="number">0</span>:<span class="number">11</span> /usr/sbin/httpd</span><br></pre></td></tr></table></figure>
<p>如果有httpd进行运行，则说明启动正常。<br>如果启动失败，请根据logs分析原因。</p>
<h2 id="u6D4B_u8BD5_u8FD0_u884C"><a href="#u6D4B_u8BD5_u8FD0_u884C" class="headerlink" title="测试运行"></a>测试运行</h2><p>在浏览器或者postman中输入url,看到下面的结果，应该就OK了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u57FA_u672C_u73AF_u5883_u5B89_u88C5"><a href="#u57FA_u672C_u73AF_u5883_u5B89_u88C5" class="headerlink" title="基本环境安装"></a>基本环境安装</h2]]>
    </summary>
    
      <category term="php" scheme="http://wiki.niejinkun.com/tags/php/"/>
    
      <category term="yii2" scheme="http://wiki.niejinkun.com/tags/yii2/"/>
    
      <category term="php" scheme="http://wiki.niejinkun.com/categories/php/"/>
    
  </entry>
  
</feed>
